<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Decoding T-SQL CAST in C#/VB.NET</Title>
<Body>&lt;p&gt;Recently our site has been deluged with the resurgence of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Asprox_botnet&quot; rel=&quot;noreferrer&quot;&gt;Asprox botnet&lt;/a&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot; rel=&quot;noreferrer&quot;&gt;SQL injection&lt;/a&gt; attack. Without going into details, the attack attempts to execute SQL code by encoding the &lt;a href=&quot;http://en.wikipedia.org/wiki/Transact-SQL&quot; rel=&quot;noreferrer&quot;&gt;T-SQL&lt;/a&gt; commands in an ASCII encoded BINARY string. It looks something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;DECLARE%20@S%20NVARCHAR(4000);SET%20@S=CAST(0x44004500...06F007200%20AS%20NVARCHAR(4000));EXEC(@S);--&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I was able to decode this in SQL, but I was a little wary of doing this since I didn&#x27;t know exactly what was happening at the time.&lt;/p&gt;&lt;p&gt;I tried to write a simple decode tool, so I could decode this type of text without even touching &lt;a href=&quot;http://en.wikipedia.org/wiki/Microsoft_SQL_Server&quot; rel=&quot;noreferrer&quot;&gt;SQL&amp;nbsp; Server&lt;/a&gt;. The main part I need to be decoded is:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;CAST(0x44004500...06F007200 ASNVARCHAR(4000))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&#x27;ve tried all of the following commands with no luck:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;txtDecodedText.Text =    System.Web.HttpUtility.UrlDecode(txtURLText.Text);txtDecodedText.Text =    Encoding.ASCII.GetString(Encoding.ASCII.GetBytes(txtURLText.Text));txtDecodedText.Text =    Encoding.Unicode.GetString(Encoding.Unicode.GetBytes(txtURLText.Text));txtDecodedText.Text =    Encoding.ASCII.GetString(Encoding.Unicode.GetBytes(txtURLText.Text));txtDecodedText.Text =    Encoding.Unicode.GetString(Convert.FromBase64String(txtURLText.Text));&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;What is the proper way to translate this encoding without using SQL Server? Is it possible? I&#x27;ll take VB.NET code since I&#x27;m familiar with that too.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Okay, I&#x27;m sure I&#x27;m missing something here, so here&#x27;s where I&#x27;m at.&lt;/p&gt;&lt;p&gt;Since my input is a basic string, I started with just a snippet of the encoded portion - 4445434C41 (which translates to DECLA) - and the first attempt was to do this...&lt;/p&gt;&lt;pre&gt;&lt;code&gt;txtDecodedText.Text = Encoding.UTF8.GetString(Encoding.UTF8.GetBytes(txtURL.Text));&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;...and all it did was return the exact same thing that I put in since it converted each character into is a byte.&lt;/p&gt;&lt;p&gt;I realized that I need to parse every two characters into a byte manually since I don&#x27;t know of any methods yet that will do that, so now my little decoder looks something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;while (!boolIsDone){    bytURLChar = byte.Parse(txtURLText.Text.Substring(intParseIndex, 2));    bytURL[intURLIndex] = bytURLChar;    intParseIndex += 2;    intURLIndex++;    if (txtURLText.Text.Length - intParseIndex &amp;lt; 2)    {        boolIsDone = true;    }}txtDecodedText.Text = Encoding.UTF8.GetString(bytURL);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Things look good for the first couple of pairs, but then the loop balks when it gets to the &quot;4C&quot; pair and says that the string is in the incorrect format.&lt;/p&gt;&lt;p&gt;Interestingly enough, when I step through the debugger and to the GetString method on the byte array that I was able to parse up to that point, I get &quot;,-+&quot; as the result.&lt;/p&gt;&lt;p&gt;How do I figure out what I&#x27;m missing - do I need to do a &quot;direct cast&quot; for each byte instead of attempting to parse it?&lt;/p&gt;</Body>
<Tags>c#,sql,vb.net,ascii,hex</Tags>
</question>
</qroot>
