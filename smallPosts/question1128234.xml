<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How can I obtain the full AST in Python?</Title>
<Body>&lt;p&gt;I like the options offered by the &lt;b&gt;_ast&lt;/b&gt; module, it&#x27;s really powerful. Is there a way of getting the full AST from it? &lt;/p&gt;&lt;p&gt;For example, if I get the AST of the following code :&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import osos.listdir(&quot;.&quot;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;by using :&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ast = compile(source_string,&quot;&amp;amp;lt;string&amp;amp;gt;&quot;,&quot;exec&quot;,_ast.PyCF_ONLY_AST)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;the body of the &lt;b&gt;ast&lt;/b&gt; object will have two elements, an &lt;b&gt;import&lt;/b&gt; object, and a &lt;b&gt;expr&lt;/b&gt; object. However, I&#x27;d like to go further, and obtain the AST of &lt;b&gt;import&lt;/b&gt; and &lt;b&gt;listdir&lt;/b&gt;, in other words, I&#x27;d like to make &lt;b&gt;_ast&lt;/b&gt; descend to the lowest level possible. &lt;/p&gt;&lt;p&gt;I think it&#x27;s logical that this sort of thing should be possible. The question is &lt;b&gt;how&lt;/b&gt;?&lt;/p&gt;&lt;p&gt;EDIT: by the lowest level possible, I didn&#x27;t mean accesing what&#x27;s &quot;visible&quot;. I&#x27;d like to get the AST for the implementation of &lt;b&gt;listdir&lt;/b&gt; as well: like &lt;b&gt;stat&lt;/b&gt; and other function calls that may be executed for it.&lt;/p&gt;</Body>
<Tags>python,abstract-syntax-tree</Tags>
</question>
<answer>
<Body>&lt;pre&gt;&lt;code&gt;py&amp;gt; ast._fields(&#x27;body&#x27;,)py&amp;gt; ast.body[&amp;lt;_ast.Import object at 0xb7978e8c&amp;gt;, &amp;lt;_ast.Expr object at 0xb7978f0c&amp;gt;]py&amp;gt; ast.body[1]&amp;lt;_ast.Expr object at 0xb7978f0c&amp;gt;py&amp;gt; ast.body[1]._fields(&#x27;value&#x27;,)py&amp;gt; ast.body[1].value&amp;lt;_ast.Call object at 0xb7978f2c&amp;gt;py&amp;gt; ast.body[1].value._fields(&#x27;func&#x27;, &#x27;args&#x27;, &#x27;keywords&#x27;, &#x27;starargs&#x27;, &#x27;kwargs&#x27;)py&amp;gt; ast.body[1].value.args[&amp;lt;_ast.Str object at 0xb7978fac&amp;gt;]py&amp;gt; ast.body[1].value.args[0]&amp;lt;_ast.Str object at 0xb7978fac&amp;gt;py&amp;gt; ast.body[1].value.args[0]._fields(&#x27;s&#x27;,)py&amp;gt; ast.body[1].value.args[0].s&#x27;.&#x27;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HTH&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;You do get the whole tree this way -- all the way to the bottom -- but, it IS held as a tree, exactly... so at each level to get the children you have to explicitly visit the needed attributes. For example (i&#x27;m naming the &lt;code&gt;compile&lt;/code&gt; result &lt;code&gt;cf&lt;/code&gt; rather than &lt;code&gt;ast&lt;/code&gt; because that would hide the standard library ast module -- I assume you only have 2.5 rather than 2.6, which is why you&#x27;re using the lower-level &lt;code&gt;_ast&lt;/code&gt; module instead?)...:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; cf.body[0].names[0].name&#x27;os&#x27;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is what tells you that the import statement is importing name &lt;code&gt;os&lt;/code&gt; (and that one only because 1 is the lengths of the &lt;code&gt;.names&lt;/code&gt; field of &lt;code&gt;.body[0]&lt;/code&gt; which is the &lt;code&gt;import&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;In Python 2.6&#x27;s module &lt;code&gt;ast&lt;/code&gt; you also get helpers to let you navigate more easily on a tree (e.g. by the &lt;code&gt;Visitor&lt;/code&gt; design pattern) -- but the whole tree is there in either 2.5 (with &lt;code&gt;_ast&lt;/code&gt;) or 2.5 (with &lt;code&gt;ast&lt;/code&gt;), and in either case is represented in exactly the same way.&lt;/p&gt;&lt;p&gt;To handily visit all the nodes in the tree, in 2.6, use module ast (no leading underscore) and subclass &lt;code&gt;ast.NodeVisitor&lt;/code&gt; as appropriate (or equivalently use &lt;code&gt;ast.iter_child_nodes&lt;/code&gt; recursively and &lt;code&gt;ast.iter_fields&lt;/code&gt; as needed). Of course these helpers can be implemented in pure Python on top of &lt;code&gt;_ast&lt;/code&gt; if you&#x27;re stuck in 2.5 for some reason.&lt;/p&gt;</Body>
</answer>
</qroot>
