<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Exception handling trouble, why?</Title>
<Body>&lt;p&gt;Here is my main:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;int main() {  Inventory Master;  bool flag;  Customer Bob(&quot;Bob&quot;, &quot;CreditCard.txt&quot;);  Customer Joe(&quot;Joe&quot;, &quot;CreditCard.txt&quot; );  Master.firststock( &quot;inventory.txt&quot; );  vector&amp;lt;Food&amp;gt; temp = Master._Inv;  cout &amp;lt;&amp;lt;&quot;Hi, What would you like to buy today?&quot; &amp;lt;&amp;lt; endl;  for(unsigned int i=0; i&amp;lt;temp.size(); i++ ) {    cout &amp;lt;&amp;lt; temp[i].name &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; temp[i].quant &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; temp[i].price &amp;lt;&amp;lt; endl;  }  cout &amp;lt;&amp;lt;&quot;\n&quot;;  Food Apple(&quot;Apples&quot;, .99, 10);  Food Orange(&quot;Oranges&quot;, .99, 10);  Food Chip(&quot;Chips&quot;, 3.00, 10);  cout &amp;lt;&amp;lt;&quot;\nHi Bob&quot; &amp;lt;&amp;lt; endl;  flag = Bob.addCart(Apple, 7, &amp;amp;Master);  cout &amp;lt;&amp;lt;&quot;Bob&#x27;s total purchases are Currently: \n&quot;;  Bob.report();  flag = Bob.addCart(Orange, 2, &amp;amp;Master);  flag = Bob.addCart(Chip, 2, &amp;amp;Master);  Bob.report();  flag = Bob.removeCart();   Bob.report();  cout &amp;lt;&amp;lt;&quot;Bob, &quot;;  flag = Bob.checkout(&amp;amp;Master);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;here is the following i implemented to remove food from my vector _Cart:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;bool Customer::removeCart() {  bool flag;  int q = 0;  unsigned int i=0;  string remove;  cout &amp;lt;&amp;lt; &quot;\nWhat would you like to remove and how much would you like to remove?&quot; &amp;lt;&amp;lt; endl;  cin &amp;gt;&amp;gt; remove &amp;gt;&amp;gt; q; for (i =0; i &amp;lt; _Cart.size(); i++) {  if(remove == _Cart[i].name) {      if (q &amp;gt;= 0) {    _Cart[i].quant -= q;    //inv-&amp;gt;_Inv[i].quant += q;    cout &amp;lt;&amp;lt;&quot;\nYou removed &quot; &amp;lt;&amp;lt; q &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; remove &amp;lt;&amp;lt;&quot; In your cart\n&quot; &amp;lt;&amp;lt; endl;    return true;      }      if  (q &amp;lt; 0) {          cout &amp;lt;&amp;lt; &quot;Invalid number of &quot; &amp;lt;&amp;lt; remove &amp;lt;&amp;lt; &quot; being removed.\n&quot; &amp;lt;&amp;lt; endl;          return true;      }  }  else {        try {    throw remove;}  catch (string param) {    cout &amp;lt;&amp;lt; &quot;\n&quot; &amp;lt;&amp;lt; remove &amp;lt;&amp;lt; &quot; doesn&#x27;t exist in your cart\n&quot; &amp;lt;&amp;lt; endl;        }        return true;    } }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My header containing the the function removeCart:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Customer {  public:   Customer(string n, string fileName);    ~Customer() { _Cart.clear(); };    bool addCart(Food f, int q, Inventory* inv);    bool removeCart();    void report();     bool checkout(Inventory* inv);   protected:    string remove;    string name;    int q;    int card;    double balance;    CreditCard _CC(int card,double balance);    vector&amp;lt;Food&amp;gt; _Cart;};&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now for some reason when i call removeCart, entering &quot;Apples&quot; works but i noticed i made a food object called Apple so not sure why typing &quot;Apples&quot; works for being removed instead of &quot;Apple&quot;. Also when i try &quot;Orange&quot; or &quot;Chip&quot; the exception is shown but as you can see in main i added Chip and Orange to Bob&#x27;s Cart. I could appreciate the help.&lt;/p&gt;</Body>
<Tags>c++,visual-c++</Tags>
</question>
<answer>
<Body>&lt;p&gt;You are making an object called Apple containing a member of type std::string which holds characters &quot;Apples&quot;. Only your compiler knows that you called an object Apple but your program compare string &quot;Apples&quot; with your input. Same with Orange and Chip.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;You&#x27;ve &lt;em&gt;declared&lt;/em&gt; an &lt;strong&gt;object&lt;/strong&gt; called &lt;code&gt;Apple&lt;/code&gt; somewhere in your code.&lt;/p&gt;&lt;p&gt;You&#x27;ve then &lt;strong&gt;instantiated&lt;/strong&gt; an instance of an &lt;code&gt;Apple&lt;/code&gt; class and set the &lt;code&gt;Apple::name&lt;/code&gt; member to &lt;code&gt;&#x27;Apples&#x27;&lt;/code&gt;, a string.&lt;/p&gt;&lt;p&gt;You&#x27;re not comparing the &lt;em&gt;input&lt;/em&gt; with the &lt;em&gt;class name&lt;/em&gt;, you&#x27;re comparing the &lt;em&gt;input&lt;/em&gt; with the &lt;strong&gt;member data of the &lt;code&gt;Apple&lt;/code&gt; class&lt;/strong&gt;.&lt;/p&gt;</Body>
</answer>
</qroot>
