<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>in looping, array is always being cleared</Title>
<Body>&lt;p&gt;Each time my program loops the data which is stored inside an &lt;code&gt;int array[]&lt;/code&gt; is being cleared.&lt;/p&gt;&lt;p&gt;I did a count and count2 check every time it goes when the user selects the 1st option, but it is getting reset instead of the increment too.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;sstream&amp;gt;#include &amp;lt;string&amp;gt;using namespace std;class MissionPlan //start of MissionPlan class{    public:    MissionPlan();}; //end of MissionPlan classMissionPlan::MissionPlan(){    int choice; // to capture what user inputs into menu    int count=0; // to count how many times it save into array and use it later for looping    int count2=0;//for adding x and y coordinates correctly into array    int coor [100]; //storing x and y coordinates    float index[100];//storing the civ index    cout&amp;lt;&amp;lt;&quot;Welcome to Mission Plan program!&quot;&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;&quot;1)      Input statistical data&quot;&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;&quot;2)      Compute civ.index value(for all records)&quot;&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;    &quot;3)      Print top 5 exploration destinations&quot;&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;&quot;4)      Print total travel distance&quot;&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;&quot;Please enter your choice: &quot;;    cin&amp;gt;&amp;gt;choice;    for(;;)    {        if(choice == 1)        {               cout&amp;lt;&amp;lt;count&amp;lt;&amp;lt;endl;            cout&amp;lt;&amp;lt;count2&amp;lt;&amp;lt;endl;             int x,y; // for reading x and y coordinate            cout&amp;lt;&amp;lt;&quot;Please enter x-ordinate: &quot;; //Display x-ordinate            cin&amp;gt;&amp;gt;x;//reading input from user and put into x            coor[count2] = x;//storing x coordinate into coor[] array            cout&amp;lt;&amp;lt;&quot;Please enter y-ordinate: &quot;;//Display y-ordinate            cin&amp;gt;&amp;gt;y;//reading input from user and put into x            coor[1+count2] = y;//storing y coordinate into coor[] array            cin.clear();//clearing cin            cin.ignore(10000,&#x27;\n&#x27;);//to ignore char to 10000 and a linefeed            count++;            count2 +=2;            cout&amp;lt;&amp;lt;count&amp;lt;&amp;lt;endl;            cout&amp;lt;&amp;lt;count2&amp;lt;&amp;lt;endl;            return;                 }        else if(choice == 2)        {                   cout&amp;lt;&amp;lt;&quot;choice 2 &quot;&amp;lt;&amp;lt;endl;//to display            return;        }        else if(choice==3)        {            cout&amp;lt;&amp;lt;&quot;choice 3&quot;&amp;lt;&amp;lt;endl;            return;        }        else            cout&amp;lt;&amp;lt;&quot;Please enter number 1 to 4 only!&quot;&amp;lt;&amp;lt;endl;    }//end of while loop}//end of MissionPlan()int main(){    for(;;){MissionPlan();}    return 0;}&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>c++,infinite-loop</Tags>
</question>
<answer>
<Body>&lt;p&gt;You declared your arrays inside the function &lt;code&gt;MissionPlan()&lt;/code&gt;, so that they are under the stack. When the function returns (exited), there is no guarantee that the arrays will be kept, and they will most probably be &quot;re-initialized&quot;, that&#x27;s zeroed.&lt;/p&gt;&lt;p&gt;If you need to preserve the content of the arrays, there are a few options, one of them is to declare the array in the &lt;strong&gt;global scope&lt;/strong&gt; (i.e. outside all functions), another is to add the &lt;code&gt;static&lt;/code&gt; modifier to the array variable so that the array is initialized only once and its content will be kept throughout the program:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;static int coor [100]; //storing x and y coordinatesstatic float index[100];//storing the civ index&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;One more option is to declare the variable inside &lt;code&gt;main()&lt;/code&gt; function and pass them by function parameters.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;I saw you used &lt;code&gt;class&lt;/code&gt; in your code but seems that you&#x27;re not using them appropriately: you just kept calling the constructor? (which I am quite confused whether it will work...)&lt;/p&gt;&lt;p&gt;I think in your case you would simply define a simple function. Or if you really use &lt;code&gt;class&lt;/code&gt;, keep an instance of it in &lt;code&gt;main()&lt;/code&gt;, put the arrays and other variables that will be reused into the &lt;code&gt;class&lt;/code&gt;, and make &lt;code&gt;MissionPlan()&lt;/code&gt; a function instead of a constructor.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;In the end of each iteration you make &lt;code&gt;return&lt;/code&gt; that throws you out of running function.And when you enter the function again all the local variables are reinitialized. Take them out of the function body. Or just put outer infinite loop from &lt;code&gt;main()&lt;/code&gt; into &lt;code&gt;MissionPlan()&lt;/code&gt;.&lt;/p&gt;</Body>
</answer>
</qroot>
