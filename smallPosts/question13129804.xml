<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Python - How to get current keylock status?</Title>
<Body>&lt;p&gt;I&#x27;m attempting to write a simple programme that displays the current status of the different keylocks, but I&#x27;m unable to find a solution as to how to get the current status of them in Python. Thank you.&lt;/p&gt;</Body>
<Tags>python,capslock</Tags>
</question>
<answer>
<Body>&lt;pre&gt;&lt;code&gt;└──&amp;gt; xset q | grep LED  auto repeat:  off    key click percent:  0    LED mask:  00000000└──&amp;gt; xset q | grep LED  auto repeat:  off    key click percent:  0    LED mask:  00000001&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When the caps lock is on, the LED mask should be 1 and if the LED mask is off, it should be 0.&lt;/p&gt;&lt;p&gt;Additionally since you mentioned that you wanted to use python, you could get the value in the following way&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import commands&amp;gt;&amp;gt;&amp;gt; # Caps Lock is off.&amp;gt;&amp;gt;&amp;gt; commands.getoutput(&#x27;xset q | grep LED&#x27;)[65]&#x27;0&#x27;&amp;gt;&amp;gt;&amp;gt; # Setting Caps Lock on now.&amp;gt;&amp;gt;&amp;gt; commands.getoutput(&#x27;xset q | grep LED&#x27;)[65]&#x27;1&#x27;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;python 3 version:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import subprocessif subprocess.check_output(&#x27;xset q | grep LED&#x27;, shell=True)[65] == 50 :    capslock = Falseif subprocess.check_output(&#x27;xset q | grep LED&#x27;, shell=True)[65] == 51 :    capslock = Trueprint( &quot;capslock ON is : &quot;, capslock )&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;If you can wait a day or two, I&#x27;ll add this functionality to &lt;a href=&quot;https://github.com/gvalkov/python-evdev&quot; rel=&quot;noreferrer&quot;&gt;python-evdev&lt;/a&gt; and update this answer. It&#x27;s probably going to look something along the lines of:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from evdev import InputDevice, ecodesdev = InputDevice(&#x27;/dev/input/eventX&#x27;) # your keyboard devicedev.ledstates(verbose=True){ (0, &#x27;LED_NUML&#x27;)    : True,  (1, &#x27;LED_CAPSL&#x27;)   : True,  (2, &#x27;LED_SCROLLL&#x27;) : False}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Using &lt;code&gt;xset&lt;/code&gt;, as mentioned by @ronak, is a lot easier since you don&#x27;t have to have read permissions on any input devices. Unfortunately, it works only under X (and X in turn uses the &lt;code&gt;evdev&lt;/code&gt; interface (at least on linux)).&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Well, It took me long enough, but it&#x27;s in. The interface for getting &#x27;ON&#x27; LEDs ended up being:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; dev.leds()[0, 1, 8, 9]&amp;gt;&amp;gt;&amp;gt; dev.leds(verbose=True)[(&#x27;LED_NUML&#x27;, 0), (&#x27;LED_CAPSL&#x27;, 1), (&#x27;LED_MISC&#x27;, 8), (&#x27;LED_MAIL&#x27;, 9)]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Getting all available LEDs on a device:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; dev.capabilities()[ecodes.EV_LED][0, 1, 2]&amp;gt;&amp;gt;&amp;gt; dev.capabilities(verbose=True)[(&#x27;EV_LED&#x27;, ecodes.EV_LED)][(&#x27;LED_NUML&#x27;, 0), (&#x27;LED_CAPSL&#x27;, 1), (&#x27;LED_SCROLLL&#x27;, 2)]&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Ok, after reading the &lt;a href=&quot;https://bitbucket.org/jwilk/python-keyboardleds/src/bdcc040e8da40e24ca6452403b4a97c7420ca131/keyboardleds.py?at=default&quot; rel=&quot;nofollow&quot;&gt;source code for &lt;code&gt;python-keyboardleds&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;http://www.kernel.org/doc/man-pages/online/pages/man4/console_ioctl.4.html&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;console_ioctl&lt;/code&gt; manpage&lt;/a&gt;, here&#x27;s how to do it in plain Python:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import osimport structimport fcntlDEVICE = &#x27;/dev/tty&#x27;    _KDGETLED = 0x4B31scroll_lock = 0x01num_lock = 0x02caps_lock = 0x04fd = os.open(DEVICE, os.O_WRONLY)# ioctl to get state of ledsbytes = struct.pack(&#x27;I&#x27;, 0)bytes = fcntl.ioctl(fd, _KDGETLED, bytes)[leds_state] = struct.unpack(&#x27;I&#x27;, bytes)# Use bitmask to check status caps_lock bitstatus = leds_state &amp;amp; caps_lock != 0print &quot;Caps Lock is On: %s&quot; % status&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This only works for real terminals and VTs (1-7, those accessible with &lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;alt&lt;/kbd&gt;+&lt;kbd&gt;Fx&lt;/kbd&gt;), not for pseudo-terminals in an X11 terminal emulator for example.&lt;/p&gt;&lt;p&gt;To check, run &lt;code&gt;tty&lt;/code&gt; in your console:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ tty/dev/tty1    # will work$ tty/dev/pts/4   # won&#x27;t work&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Using &lt;code&gt;/dev/console&lt;/code&gt; as the device to query will work in X11 as well, but requires root privileges.&lt;/p&gt;&lt;p&gt;For details on the concepts involved see the Wikipedia pages on &lt;a href=&quot;http://en.wikipedia.org/wiki/Ioctl&quot; rel=&quot;nofollow&quot;&gt;ioctls&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Mask_%28computing%29&quot; rel=&quot;nofollow&quot;&gt;bitmasking&lt;/a&gt;, and the docs to the Python &lt;a href=&quot;http://docs.python.org/2/library/fcntl.html&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;fcntl&lt;/code&gt; module&lt;/a&gt;.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Also see tkinter - that has events for Caps-Lock.I used xset to find the initial status of Caps-Lock when I open a panel, and then used the tkinter event to keep track whilst the panel is open.1) I was not sure how to get the initial state in tkinter - there must be a way2 xset did not seem reliable within the tkinter event proc - the proc did not always show the caps-lock change via xset...&lt;/p&gt;&lt;p&gt;Sample code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;def capsLock(event):   caps = event.state &amp;amp; 0x0002&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Also see:&lt;a href=&quot;https://stackoverflow.com/questions/13129804/python-how-to-get-current-keylock-status&quot;&gt;Python - How to get current keylock status?&lt;/a&gt;&lt;/p&gt;</Body>
</answer>
</qroot>
