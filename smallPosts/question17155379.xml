<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Django: ValueError: Cannot create form field because its related model has not been loaded yet</Title>
<Body>&lt;p&gt;I&#x27;m having some trouble with a Django project I&#x27;m working on. I now have two applications, which require a fair bit of overlap. I&#x27;ve really only started the second project (called &lt;code&gt;workflow&lt;/code&gt;) and I&#x27;m trying to make my first form for that application. My first application is called &lt;code&gt;po&lt;/code&gt;. In the &lt;code&gt;workflow&lt;/code&gt; application I have a class called &lt;code&gt;WorkflowObject&lt;/code&gt;, which (for now) has only a single attribute--a foreign key to a &lt;code&gt;PurchaseOrder&lt;/code&gt;, which is defined in &lt;code&gt;po/models.py&lt;/code&gt;. I have imported that class with &lt;code&gt;from po.models import PurchaseOrder&lt;/code&gt;. &lt;/p&gt;&lt;p&gt;What I&#x27;m trying to do is have a page where a user creates a new &lt;code&gt;PurchaseOrder&lt;/code&gt;. This works fine (it&#x27;s the same form that I used in my &lt;code&gt;PurchaseOrder&lt;/code&gt; application), and then uses that instance of the class to create a &lt;code&gt;WorkflowObject&lt;/code&gt;. The problem now, is that I get the error: &lt;code&gt;ValueError: Cannot create form field for &#x27;purchase&#x27; yet, because its related model &#x27;PurchaseOrder&#x27; has not been loaded yet&lt;/code&gt;. I&#x27;m really not sure where to start with this. It was working ok (allowing me to create a new &lt;code&gt;PurchaseOrder&lt;/code&gt; and forward to a url with its primary key in the url) until I added the view that should allow me to create a new &lt;code&gt;WorkflowObject&lt;/code&gt;. I&#x27;ll put that specific view here: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;from django.http import HttpResponse, HttpResponseRedirectfrom django.shortcuts import render, get_object_or_404from django_tables2 import RequestConfigfrom po.models import PurchaseOrderForm, PurchaseOrderfrom workflow.models import POObject, WorkflowFormdef new2(request, number): po=PurcchaseOrder.objects.get(pk=number) if request.method == &#x27;POST&#x27;:   form = WorkflowForm(request.POST)   if form.is_valid():      new_flow = form.save()      return HttpResponse(&#x27;Good&#x27;)   else:      return render(request, &#x27;new-workflow.html&#x27;, {&#x27;form&#x27;: form, &#x27;purchase&#x27;: po})  else:    form = WorkflowForm()    return render(request, &#x27;new-workflow.html&#x27;, {&#x27;form&#x27;: form, &#x27;purchase&#x27;: po})&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The lines of code that seem to be causing the error (or at least, one of the lines that is shown in the traceback) is: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;class WorkflowForm(ModelForm):   purchase = forms.ModelChoiceField(queryset = PurchaseOrder.objects.all())&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EDIT: I seem to have made a very noob mistake, and included parentheses in my definition of &lt;code&gt;WorkflowObject&lt;/code&gt;, that is, I had said &lt;code&gt;purchase=models.ForeignKey(&#x27;PurchaseOrder&#x27;)&lt;/code&gt;, instead of &lt;code&gt;purchase=models.ForeignKey(PurchaseOrder)&lt;/code&gt;&lt;/p&gt;</Body>
<Tags>python,django,forms</Tags>
</question>
<answer>
<Body>&lt;p&gt;Firstly, you can try reduce code to: &lt;/p&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;def new2(request, number):    po=PurcchaseOrder.objects.get(pk=number)    form = WorkflowForm(request.POST or None)    if form.is_valid():        new_flow = form.save()        return HttpResponse(&#x27;Good&#x27;)    else:        return render(request, &#x27;new-workflow.html&#x27;, {&#x27;form&#x27;: form, &#x27;purchase&#x27;: po})&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;p&gt;Secondly, I not understood why you at other case wrote &lt;code&gt;forms.ModelChoiceField(...)&lt;/code&gt; and another case &lt;code&gt;ModelForm&lt;/code&gt; instance &lt;code&gt;forms.ModelForm&lt;/code&gt; ?&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Seems, that there are nothing special in your WorkflowForm, so you can define it as follows:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class WorkflowForm(ModelForm):    class Meta:        model = WorkflowObject&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Field for relation will be created automatically.&lt;/p&gt;&lt;p&gt;Documentation: &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/forms/modelforms/&quot; rel=&quot;nofollow&quot;&gt;Creating forms from models&lt;/a&gt;&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;I had a similar problem and was able to resolve this by declaring all my modelForm classes below all my class models in my models.py file. This way the model classes were loaded before the modelForm classes.&lt;/p&gt;</Body>
</answer>
</qroot>
