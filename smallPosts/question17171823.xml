<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Python : split a list dynamically</Title>
<Body>&lt;p&gt;I have a list &lt;code&gt;prodemployees&lt;/code&gt; that looks like this : &lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&#x27;prd1 employe4 employe2&#x27;, &#x27; prd2 employe2&#x27;]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I need the values of this list to dynamically create the &quot;where&quot; statement of a query, I need the output to be like this : &lt;/p&gt;&lt;pre&gt;&lt;code&gt;WHERE (product = &#x27;prd1&#x27; AND employe IN (&#x27;employe4&#x27;,&#x27;employe2&#x27;))OR(product = &#x27;prd2&#x27; AND employe IN (&#x27;employe2&#x27;))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I hae tried splitting on whitespace each value of the list, and create a sublist containing the resulting values, but failed at using those values.&lt;/p&gt;&lt;p&gt;I&#x27;m new to Python, any help is appreciated.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;splitOnSpace = []for i in range(len(prodemployees)) :  splitOnSpace = prodemployees[i].split()    for j in range(len(splitOnSpace)) :        #this is where I should do something with splitOnSpace[j] I guess...&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,python-2.7</Tags>
</question>
<answer>
<Body>&lt;p&gt;You have a list after splitting, you can &lt;em&gt;slice&lt;/em&gt; that list to get a sublist:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for prod_emp in prodemployees:    prod_emp = prod_emp.split()    prod, emp = prod_emp[0], prod_emp[1:]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here &lt;code&gt;prod&lt;/code&gt; is set to the first element of your split string, &lt;code&gt;emp&lt;/code&gt; to a list of all elements but the first:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; prodemployees = [&#x27;prd1 employe4 employe2&#x27;, &#x27; prd2 employe2&#x27;]&amp;gt;&amp;gt;&amp;gt; for prod_emp in prodemployees:...     prod_emp = prod_emp.split()...     prod, emp = prod_emp[0], prod_emp[1:]...     print prod, emp... prd1 [&#x27;employe4&#x27;, &#x27;employe2&#x27;]prd2 [&#x27;employe2&#x27;]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;From here on out, I&#x27;d use SQL parameters to do the actual queries. Build the filters, then pass in the chain of all split arguments as one long parameter list:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from itertools import chainfilters = filters = (&#x27;(product=%s AND employee in ({}))&#x27;.format(&#x27;, &#x27;.join(&#x27;%s&#x27; for _ in range(len(pe.split()) - 1))) for pe in prodemployees)cursor.execute(&#x27;SELECT * FROM sometable WHERE {}&#x27;.format(                   &#x27; OR &#x27;.join(filters)),               chain.from_iterable(pe.split() for pe in prodemployees))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here &lt;code&gt;filters&lt;/code&gt; generates suitable SQL with parameter placeholders:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; filters = (&#x27;(product=%s AND employee in ({}))&#x27;.format(&#x27;, &#x27;.join(&#x27;%s&#x27; for _ in range(len(pe.split()) - 1))) for pe in prodemployees)&amp;gt;&amp;gt;&amp;gt; list(filters)[&#x27;(product=%s AND employee in (%s, %s))&#x27;, &#x27;(product=%s AND employee in (%s))&#x27;]&amp;gt;&amp;gt;&amp;gt; filters = (&#x27;(product=%s AND employee in ({}))&#x27;.format(&#x27;, &#x27;.join(&#x27;%s&#x27; for _ in range(len(pe.split()) - 1))) for pe in prodemployees)&amp;gt;&amp;gt;&amp;gt; &#x27;SELECT * FROM sometable WHERE {}&#x27;.format(...                    &#x27; OR &#x27;.join(filters))&#x27;SELECT * FROM sometable WHERE (product=%s AND employee in (%s, %s)) OR (product=%s AND employee in (%s))&#x27;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;which &lt;code&gt;.execute()&lt;/code&gt; would fill into your query from the parameters that &lt;code&gt;chain.from_iterable()&lt;/code&gt; provides:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; list(chain.from_iterable(pe.split() for pe in prodemployees))[&#x27;prd1&#x27;, &#x27;employe4&#x27;, &#x27;employe2&#x27;, &#x27;prd2&#x27;, &#x27;employe2&#x27;]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;%s&lt;/code&gt; placeholders used here are specific to certain types of database adapter; others may use &lt;code&gt;?&lt;/code&gt; instead; check your database adapter documentation.&lt;/p&gt;</Body>
</answer>
</qroot>
