<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Pygame image collisions leaves gaps between images visually</Title>
<Body>&lt;p&gt;Here I am freezing the two images as soon as they collide. The lollipop starts from the top left and the bear starts from bottom right. They collide in the middle. My positions tell me that they are closer in distance, less than 50 points away&lt;/p&gt;&lt;p&gt;Here is how far the lollipop is to the bear in coordinates:&lt;code&gt;lollipop[452, 320]    and   bear[448, 330]&lt;/code&gt;&lt;code&gt;distance between the two: 10.742572683895418&lt;/code&gt;&lt;/p&gt;&lt;p&gt;How come the plots tell me different than what I see? Why would the position reference for lollipop be at the bottom of the image and the bear be at the top? Here is how I am blitting the images. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;rect = surface1.get_rect()rect = rect.move(position[0]-rect.width//2, position[1]-rect.height//2)screen.blit(surface1, rect)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Dimensions of images are (50,50) and (100,100) respectively.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;How can I allow my images to collide closer than they do now? (when the blue background touches)&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/MesTi.png&quot; alt=&quot;Space between two images when they collided&quot;&gt;&lt;/p&gt;&lt;p&gt;Here is how they collide when lollipop is coming from the right side and bear from the left. &lt;img src=&quot;https://i.stack.imgur.com/gmrI5.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&lt;p&gt;Here is how they collide when coming from top/bottom &lt;code&gt;lollipop[480, 291]       bear[440, 261]distance: 49.491213409963144&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/WIKll.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&lt;p&gt;How I check for collisions:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;def distance(p, q):return math.sqrt((p[0]-q[0])**2 + (p[1]-q[1])**2)&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,graphics,pygame,collision-detection</Tags>
</question>
<answer>
<Body>&lt;p&gt;If I understand, you are trying to compare the distance between the centers of the sprites to the size of one of the sprites.  This will not be correct for rectangles.&lt;/p&gt;&lt;p&gt;First, the formula you&#x27;re using is for circles.  In that case, you would have to compare the distance to the combined radii of the circles.&lt;/p&gt;&lt;p&gt;For the rectangles, you can calculate an intersection by doing a minimal form of the &lt;a href=&quot;http://www.metanetsoftware.com/technique/tutorialA.html&quot; rel=&quot;nofollow&quot;&gt;Separating Axis Test&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Calculate the min and max &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; bounds of each sprite, and compare them against the combined half-sizes of each sprite:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;halfWidthSprite1 = sprite1.width//2halfWidthSprite2 = sprite2.width//2halfHeightSprite1 = sprite1.height//2halfHeightSprite2 = sprite2.height//2distanceX = abs(sprite1.center[0] - sprite2.center[0])distanceY = abs(sprite2.center[1] - sprite2.center[1])collision = (distanceX &amp;lt; (halfWidthSprite1 + halfWidthSprite2)) and            (distanceY &amp;lt; (halfHeightSprite1 + halfHeightSprite2))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As mentioned in the comments, you could also use the builtin &lt;a href=&quot;http://www.pygame.org/docs/ref/sprite.html#pygame.sprite.collide_rect&quot; rel=&quot;nofollow&quot;&gt;pygame.sprite.collide_rect&lt;/a&gt; utility.&lt;/p&gt;</Body>
</answer>
</qroot>
