<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Python long string separated by \n and split analog for long string c#</Title>
<Body>&lt;p&gt;In python there is an option to do this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;patterns = [s for s in&quot;&quot;&quot;ATGCGGCATGCATGCAGGCAGGCAT&quot;&quot;&quot;.split() if s]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In c# I have a string like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ATGCGGCATGCATGCAGGCAGGCAT&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If I do &lt;/p&gt;&lt;pre&gt;&lt;code&gt;string patterns = &quot;    ATGCG    GCATG    CATGC    AGGCA    GGCAT&quot;;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;that would be incorrect&lt;/p&gt;&lt;p&gt;So I was thinking to use &lt;/p&gt;&lt;pre&gt;&lt;code&gt;string patterns = &quot;ATGCG\nGCATG\nCATGC\nAGGCA\nGGCAT&quot;;            var elems = patterns.Split(new[] { &quot;\n&quot; }, StringSplitOptions.RemoveEmptyEntries);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However I do not want to put &lt;code&gt;\n&lt;/code&gt; each new line, Is there a better way to do this?Maybe reading from a file that string? How would c# code look like?&lt;/p&gt;&lt;p&gt;I was thinking on&lt;/p&gt;&lt;pre&gt;&lt;code&gt;StringBuilder sb = new StringBuilder();using (StreamReader sr = new StreamReader(&quot;TestFile.txt&quot;)) {    String line;    while ((line = sr.ReadLine()) != null)     {        sb.AppendLine(line);    }}string allines = sb.ToString();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;would that be correct?&lt;/p&gt;&lt;p&gt;full answer is:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;using System;using System.Collections.Generic;using System.Text;using System.Linq;namespace ConsoleApplication3{    class Program    {        static void com.stackoverflow.Main(string[] args)        {            string patterns = @&quot; ATGCG GCATG CATGC AGGCA GGCAT    &quot;;            var elems = patterns.Split(new[] { &quot;\r\n&quot; }, StringSplitOptions.RemoveEmptyEntries);            var results = elems.SelectMany((p1, i1) =&amp;gt; elems.Where((p2, i2) =&amp;gt; i1 != i2).Select(p2 =&amp;gt; new { p1, p2 }))                  .Where(x =&amp;gt; x.p1.Substring(1) == x.p2.Substring(0, x.p2.Length - 1)).ToList();            string result = &quot;&quot;;            foreach (var pair in results)            {                result += pair.p1 + &quot; -&amp;gt; &quot; + pair.p2 +&quot;\n&quot;;            }            System.IO.File.WriteAllText(&quot;out.txt&quot;, result);        }    }}&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>c#,python,string</Tags>
</question>
<answer>
<Body>&lt;pre&gt;&lt;code&gt;string allines  = File.ReadAllText(path);&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;I&#x27;m not sure I completely follow you, but if you&#x27;re looking to define a variable over several lines, you could define the string using a &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa691090%28v=vs.71%29.aspx&quot; rel=&quot;nofollow&quot;&gt;verbatim string literal&lt;/a&gt;, and then split on &lt;code&gt;Environment.NewLine&lt;/code&gt; (&lt;code&gt;\r\n&lt;/code&gt;)&lt;/p&gt;&lt;pre&gt;&lt;code&gt;string patterns = @&quot;ATGCGGCATGCATGCAGGCAGGCAT&quot;;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here&#x27;s how you can get the individual lines out:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;var elems = patterns.Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
