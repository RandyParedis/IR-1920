<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>why does this code produce a runtime error?</Title>
<Body>&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;#include&amp;lt;conio.h&amp;gt;#include&amp;lt;windows.h&amp;gt;struct node{    int a;    struct node *next;};void createlist(struct node **head){    struct node *p,*temp;    int n;    printf(&quot;enter the number\n&quot;);    scanf(&quot;%d&quot;,&amp;amp;n);    p=(struct node*)malloc(sizeof(struct node));    p-&amp;gt;a=n;    if(*head==0) {        *head=p;        p-&amp;gt;next=0;        temp=p;    }    else {        temp-&amp;gt;next=p;        temp=p;        p-&amp;gt;next=0;    }}void frontbacksplit(struct node **head,struct node **head1,struct node **head2){    int counter=0,i;    struct node *temp,*p;    temp=*head;    while(temp!=0) {        counter++;        temp=temp-&amp;gt;next;    }       int n;    if(counter%2==0) {        n=counter/2;    } else {        n=(counter+1)/2;    }    temp=*head;    for(i=0;i&amp;lt;n-1;i++) {        if(*head1==0) {            *head1=temp;        }        temp=temp-&amp;gt;next;    }    p=temp;    temp=temp-&amp;gt;next;    p-&amp;gt;next=0;    for(i=n+1;i&amp;lt;counter;i++) {        if(*head2==0) {            *head2=temp;        }        temp=temp-&amp;gt;next;    }}void display(struct node **head){    struct node *temp;    temp=*head;    while(temp!=0) {        printf(&quot;%d\t&quot;,temp-&amp;gt;a);        temp=temp-&amp;gt;next;    }       printf(&quot;\n&quot;);}int main(){    int n=1,i,k;    struct node *head3,*head1,*head2;    head3=0;    head1=0;    head2=0;    while(n==1) {        printf(&quot;enter \n1-To add the elements\n2-To split the list into front and        the back\n3-To display the elements\n&quot;);        scanf(&quot;%d&quot;,&amp;amp;i);        switch(i)        {            case 1:                createlist(&amp;amp;head3);                break;            case 2:                frontbacksplit(&amp;amp;head3,&amp;amp;head1,&amp;amp;head2);                break;            case 3:                printf(&quot;enter\n1-To display front list\n2-To display rear list\n&quot;);                scanf(&quot;%d&quot;,&amp;amp;k);                switch(k)                {                    case 1:                        display(&amp;amp;head1);                        break;                    case 2:                        display(&amp;amp;head2);                }                break;                default:                printf(&quot;please enter a valid option\n&quot;);        }        printf(&quot;enter\n1-To continue\nany other number to exit\n&quot;);        scanf(&quot;%d&quot;,&amp;amp;n);    }    getch();    return 0;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I have written this code for front / back splitting of the linked list. For example if the list is [1 2 3 4 5] then this program splits the list into the two lists: front part (1 2 3) and back part(4 5), if the number of elements are equal both the parts get equal number of elements.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; When I try to add elements in the source list, the first elements get added as usual but when I try add other element my program shows a run time error. I think there is problem with the pointer variable temp but almost same code for the creation of linked list worked properly.&lt;/p&gt;&lt;p&gt;I am using dev c++ ide on windows 8.&lt;/p&gt;&lt;p&gt;Of course point out if you did&#x27;t like the way this question is asked, as this is my first time.&lt;/p&gt;</Body>
<Tags>c++,c</Tags>
</question>
<answer>
<Body>&lt;p&gt;On first look this line &lt;code&gt;temp-&amp;gt;next = p&lt;/code&gt; in &lt;code&gt;createlist&lt;/code&gt; function is wrong, &lt;code&gt;temp&lt;/code&gt; is a local variable, although you make it point to the element when the list is created for the first time the value is lost after the &lt;code&gt;createlist&lt;/code&gt; function returns, so will you be accessing junk addresses in consecutive calls to &lt;code&gt;createlist&lt;/code&gt;&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;The pointer variable &#x27;temp&#x27; in createlist() function is being used without assignment on calls subsequent to the first call. You could benefit using -Wall options if you are using GCC.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Maybe you should change  to this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;void createlist(struct node **head){    struct node *p,*temp;    int n;    printf(&quot;enter the number\n&quot;);    while(scanf(&quot;%d&quot;,&amp;amp;n) != EOF)    {        p=(struct node*)malloc(sizeof(struct node));        p-&amp;gt;a=n;        if(*head==0)        {            *head=p;            p-&amp;gt;next=0;            temp=p;        }        else        {            temp-&amp;gt;next=p;            temp=p;            p-&amp;gt;next=0;        }    }}&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
