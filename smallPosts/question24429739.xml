<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>python : How can I replace complex number to -1?</Title>
<Body>&lt;p&gt;I found out isinstance method which can recognize whether the number is complex or not.and my data is looks like this.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[[ 2.48983949+0.j          0.51935128+0.j          0.50851186+0.j   0.49747311+0.j          0.48621321+0.j          0.47549854+0.j   0.32583775+0.j          0.32263812+0.j          0.31966799+0.j   0.31415193+0.j          0.31590046+0.j          0.31224772+0.j   0.30953578+0.j        ] [ 2.78263801+0.j          0.47996998+0.j          0.46950057+0.j   0.45938939+0.j          0.44934962+0.j          0.43981685+0.j   0.30778303+0.j          0.30533936+0.j          0.30283312+0.j   0.30045755+0.j          0.29776178+0.j          0.29601522+0.j   0.29394237+0.j        ] [ 0.00000000+0.86404032j  0.44030961+0.j          0.43096323+0.j   0.42117570+0.j          0.41239587+0.j          0.40406585+0.j   0.29059586+0.j          0.28840336+0.j          0.28632998+0.j   0.28435365+0.j          0.28251060+0.j          0.28053645+0.j   0.27894779+0.j        ]]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So the data is 2-dimensional numpy array.&lt;/p&gt;&lt;p&gt;And I want to replace imaginary number to -1. How could I do this?&lt;/p&gt;</Body>
<Tags>python,numpy</Tags>
</question>
<answer>
<Body>&lt;p&gt;IIUC, you could do something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; arr = np.array([[1,2+3j,4+5j],[6+7j,8,9],[10+11j,12,13+14j]])&amp;gt;&amp;gt;&amp;gt; arrarray([[  1. +0.j,   2. +3.j,   4. +5.j],       [  6. +7.j,   8. +0.j,   9. +0.j],       [ 10.+11.j,  12. +0.j,  13.+14.j]])&amp;gt;&amp;gt;&amp;gt; arr[abs(arr.imag) &amp;gt; 0] = -1&amp;gt;&amp;gt;&amp;gt; arrarray([[  1.+0.j,  -1.+0.j,  -1.+0.j],       [ -1.+0.j,   8.+0.j,   9.+0.j],       [ -1.+0.j,  12.+0.j,  -1.+0.j]])&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And then (since by construction we have all imaginary parts being zero) we could work with only the real components if we wanted:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; arr.realarray([[  1.,  -1.,  -1.],       [ -1.,   8.,   9.],       [ -1.,  12.,  -1.]])&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(Update: as noted by Floris, &lt;code&gt;arr.imag != 0&lt;/code&gt; would be even better than &lt;code&gt;abs(arr.imag) &amp;gt; 0&lt;/code&gt;.  It&#x27;d be both simpler and faster, though both will work.)&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;The best way is to work with numpy arrays. Lets say you have the array:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;In [106]: yOut[106]:array([[ 1.+0.j,  2.+0.j,  1.+0.j],       [ 1.+0.j,  2.+0.j,  1.+0.j],       [ 2.+3.j,  2.+0.j,  3.+0.j]])&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, &lt;/p&gt;&lt;pre&gt;&lt;code&gt;In [107]: y.imag &amp;gt; 0Out[107]:array([[False, False, False],       [False, False, False],       [ True, False, False]], dtype=bool)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can then use this to replace things with one:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;In [108]: y[y.imag &amp;gt; 0] = -1In [109]: yOut[109]:array([[ 1.+0.j,  2.+0.j,  1.+0.j],       [ 1.+0.j,  2.+0.j,  1.+0.j],       [-1.+0.j,  2.+0.j,  3.+0.j]])&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
