<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Converting character array to float</Title>
<Body>&lt;p&gt;I&#x27;m trying to convert my character array data into float. Is it possible?&lt;/p&gt;&lt;p&gt;Code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;char str[5] = {&#x27;1&#x27;, &#x27;2&#x27;, &#x27;.&#x27;, &#x27;3&#x27;}void main(char str[]){    float var = (float)str[]; //error}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This code didn&#x27;t work. So I also tried using:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;float var = (float) (str[0], str[1], str[2], str[3]); //output: 49&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and also&lt;/p&gt;&lt;pre&gt;&lt;code&gt;float var = (float) (str[0] + str[1] + str[2] + str[3]); //output: 196&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But they also did not work as expected..&lt;/p&gt;&lt;p&gt;My expected output should be &lt;code&gt;float var = 12.3&lt;/code&gt;&lt;/p&gt;</Body>
<Tags>c++,visual-c++,floating-point</Tags>
</question>
<answer>
<Body>&lt;p&gt;Yes, using &lt;a href=&quot;http://en.cppreference.com/w/cpp/string/basic_string/stof&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;std::stof&lt;/code&gt;&lt;/a&gt;, which takes a C-string (i.e. a null-terminated character array) and gives you a float back (if possible):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;cassert&amp;gt;int main(int argc, char* argv[]){   assert(argc &amp;gt;= 2);   const float var = std::stof(argv[1]);   std::cout &amp;lt;&amp;lt; var &amp;lt;&amp;lt; &#x27;\n&#x27;;}// $ myProgram 12.3// 12.3&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(&lt;a href=&quot;http://coliru.stacked-crooked.com/a/1c77499ab59d8031&quot; rel=&quot;nofollow&quot;&gt;live demo&lt;/a&gt;)&lt;/p&gt;&lt;p&gt;&lt;sup&gt;Note that I have also corrected your &lt;code&gt;main&lt;/code&gt; return type (which must be &lt;code&gt;int&lt;/code&gt;), and I&#x27;ve gone with a more conventional set of function arguments: though their requirements are up to the implementation, &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/6wd819wh.aspx&quot; rel=&quot;nofollow&quot;&gt;VS doesn&#x27;t document any support&lt;/a&gt; &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/88w63h9k.aspx&quot; rel=&quot;nofollow&quot;&gt;for this unconventional variant&lt;/a&gt;.&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;Of course, you don&#x27;t &lt;em&gt;need&lt;/em&gt; the input to be from command line:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;int main(){   const std::string str = &quot;12.3&quot;;   // or `const std::string str   = {&#x27;1&#x27;, &#x27;2&#x27;, &#x27;.&#x27;, &#x27;3&#x27;};   // or `const char        str[] = {&#x27;1&#x27;, &#x27;2&#x27;, &#x27;.&#x27;, &#x27;3&#x27;, &#x27;\0&#x27;};   const float var = std::stof(str);   std::cout &amp;lt;&amp;lt; var &amp;lt;&amp;lt; &#x27;\n&#x27;;}// $ myProgram// 12.3&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(&lt;a href=&quot;http://coliru.stacked-crooked.com/a/dc923c23eb0f5163&quot; rel=&quot;nofollow&quot;&gt;live demo&lt;/a&gt;)&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;pre&gt;&lt;code&gt;std::string str = {&#x27;1&#x27;, &#x27;2&#x27;, &#x27;.&#x27;, &#x27;3&#x27;};float var = std::stof(str);&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
