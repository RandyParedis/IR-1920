<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Is there a way of putting the Python Shell output in a tkinter window?</Title>
<Body>&lt;p&gt;I was wondering if it is possible (and if so, how) to have the &lt;code&gt;Python Shell&lt;/code&gt; output and input inside a &lt;code&gt;tkinter&lt;/code&gt; window I have made. I searched on google but I can&#x27;t seem to find anything. If possible, is there a short version that a beginner could understand. (All the websites I have tried I just could not understand.)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Here is my code that I have got:&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from tkinter import *def Exit():    print()def newClassResults():    #assigns variable to an input so it can be reffered to later    amount = int(input(&quot;How many people would you like to add? &quot;))    #starts for loop    for counter in range(amount):#assigns inputto a  variable called &#x27;newName&#x27;        newName = input(&quot;\nEnter the new student&#x27;s name: &quot;)#assigns input to a  variable called &#x27;newScore&#x27;        newScore = int(input(&quot;Enter the new student&#x27;s score: &quot;))#adds new results to the list below        students_and_score.append((newName,newScore))        score.append(newScore)def saveResults():#imports time module so that the program can pause for a certain amount of time    import time    print(&quot;\nSaving...&quot;)    import random, decimal    time1 = decimal.Decimal(random.randrange(1,10))/10    time.sleep(time1)    print(&quot;\nStudents&#x27; names saved&quot;)    print(&quot;Students&#x27; scores saved&quot;)def sortResults():#imports operator module     import operator#imports time module     import time    #sorts results in acsending order    students_and_score.sort(key=operator.itemgetter(1))#prints in ascending order    print(&quot;\nSorting Results...&quot;)    import random, decimal    time1 = decimal.Decimal(random.randrange(1,10))/10    time.sleep(time1)    print(students_and_score)def percentageCalc():#assigns input to variable called &#x27;number&#x27;    number = int(input(&quot;\nEnter minimum mark: &quot;))#creates variable called &#x27;size&#x27;    size = len(score)    index = 0    for counter in range(size):        if score[index] &amp;gt; number:            higher.append(score[index])        index = index + 1    higherLength = len(higher)#calculates percentage of people with score over amount entered    finished = higherLength / size    finished = finished * 100#rounds percentage    finished = round(finished)#creates space between line    print(&quot;\n&quot;)    print(finished,&quot;% of your students got over&quot;,number,&quot;marks&quot;)def printResults():#starts for loop    for pair in students_and_score:#creates space between line        print(&quot;\n&quot;)#changes layout of list so it is more readable        print(pair[0],pair[1])#assigns list to a variablestudents_and_score = [(&quot;Imelda Thomas&quot;,74),(&quot;Craig Parr&quot;,90),(&quot;Eric     Salisbury&quot;,58),(&quot;Laurence Mann&quot;,35),(&quot;Bill Walford&quot;,82),(&quot;David Haroald&quot;,27),(&quot;Pamela Langley&quot;,43),(&quot;Sarah Boat&quot;,39),(&quot;Rachel Matthews&quot;,62),(&quot;Michaela Cunningham&quot;,69)]score = [74,90,58,35,82,27,43,39,62,69]higher = []window = Tk()#sets background colourwindow.configure(background=&quot;white&quot;)#assigns titlewindow.title(&quot;Menu&quot;)#sets the size of windowwindow.geometry(&quot;300x300&quot;)window.wm_iconbitmap(&#x27;favicon.ico&#x27;)menu = Menu(window)subMenu = Menu(menu)menu.add_cascade(label=&quot;File&quot;, menu=subMenu)subMenu.add_command(label=&quot;Exit&quot;, command=Exit)subMenu = Menu(menu)menu.add_cascade(label=&quot;Edit&quot;, menu=subMenu)subMenu.add_command(label=&quot;Enter New Class Results&quot;,     command=newClassResults)subMenu.add_separator()subMenu.add_command(label=&quot;Save Results&quot;, command=saveResults)subMenu.add_command(label=&quot;Sort Results&quot;, command=sortResults)subMenu.add_command(label=&quot;Print Results&quot;, command=printResults)subMenu.add_separator()subMenu.add_command(label=&quot;Calculate Percentage&quot;, command=percentageCalc)#Finishes offwindow.config(menu=menu)window.mainloop()&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,shell,tkinter</Tags>
</question>
<answer>
<Body>&lt;p&gt;Have a look at &lt;a href=&quot;https://stackoverflow.com/questions/7253448/how-to-embed-a-terminal-in-a-tkinter-application&quot;&gt;this post&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The author inserts a terminal emulator in a &lt;code&gt;tkinter&lt;/code&gt; window. I&#x27;ve modified the program, inserting the command to start python in the tkinter window:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/pythonfrom Tkinter import *import osroot = Tk()termf = Frame(root, width = 400, height = 200)termf.pack(fill=BOTH, expand=YES)wid = termf.winfo_id()os.system(&#x27;xterm -into %d -geometry 80x20 -sb -e python &amp;amp;&#x27; % wid)root.mainloop()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This might not work in Windows though, as there is no &lt;code&gt;xterm&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;This is a screenshot of the terminal working, and I packed a button in the same window, just to show the terminal is really in the frame:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/kYhWE.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;You could always try to &lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot; rel=&quot;nofollow&quot; title=&quot;eval&quot;&gt;eval&lt;/a&gt;(string), capture the output and print it to some textbox.&lt;/p&gt;</Body>
</answer>
</qroot>
