<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How do I setup Python for RESTApi abilities</Title>
<Body>&lt;p&gt;I am new to Python development.  I just need to write a simple app that calls our REST API and can test for GET, PUT, POST, DELETE.  I am using Python Dev Tools in Visual Studio 2015.  The first question I have is what process should I be attaching this app to when running so that I can actually see an output of results?  Next question is based on the code below, is there anything I am missing to issue a basic POST request? I have removed my actual URL, username and password, however, I have tested SwaggerUI and I do get a web token back so I have the right URL and credentials. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;import urllibimport requestsdata = {    &#x27;username&#x27;: &#x27;myUsernameIsHere&#x27;,    &#x27;password&#x27;: &#x27;myPasswordIsHere&#x27;    }urllib.request.urlopen(&#x27;http://MYURLISINSERTEDHERE&#x27;, urllib.urlencode(data))print(data)&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,rest</Tags>
</question>
<answer>
<Body>&lt;p&gt;So after looking through documentation here is how I set up my GET and POST request.  I first had to do a POST to our authentication to get back a bearer token.  Once I had that token, I created a local variable to store the token.  Then made any GET request I wanted and passed in the token.  Here is how it looks obviously you would fill in your own username, password, url and token, but you get the idea. &lt;/p&gt;&lt;p&gt;&lt;strong&gt;POST Request - to get my Bearer token&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#import requests library for making REST callsimport requestsimport json#specify urlurl = &#x27;YOUR URL GOES HERE&#x27;#Create payload that will be passed to API for authenticationpayload = {           #This will be the data that you need to POST to the REST API. In my example, in order to get back a web token, I just needed username and password.               &quot;username&quot;: &quot;USERNAME&quot;,               &quot;password&quot;: &quot;PASSWORD&quot;              }#Fill in headersheaders = {&#x27;content-type&#x27;: &#x27;application/json&#x27;}#Call REST APIresponse = requests.post(url, data=json.dumps(payload), headers=headers)#Print Responseprint(response.text)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;GET Request - to get data back while using the Bearer token from above&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#import requests library for making REST callsimport requests#specify urlurl = &#x27;YOUR URL GOES HERE&#x27;token = &quot;THIS WAS WHERE I STORED MY TOKEN&quot;headers = {&#x27;Authorization&#x27;: &#x27;Bearer &#x27; + token}response = requests.get(url, headers=headers)#Print Responseprint (response.text)&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Don&#x27;t use &lt;code&gt;urllib&lt;/code&gt; unless you need to.&lt;/p&gt;&lt;p&gt;You imported &lt;code&gt;requests&lt;/code&gt; it&#x27;s as simple as:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;payload = {    &#x27;username&#x27;: &#x27;myUsernameIsHere&#x27;,    &#x27;password&#x27;: &#x27;myPasswordIsHere&#x27;}r = requests.post(&quot;http://yourwebsite&quot;, data=payload)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Depending on the API, you might need to encode the payload to something like JSON instead.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import jsonr = requests.post(&quot;http://yourwebsite&quot;, data=json.dumps(payload))&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
