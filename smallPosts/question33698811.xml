<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Missing header file when CMake-ing glog</Title>
<Body>&lt;p&gt;I wanted to use logging in my app. In the CMake file I made (the relevant part see below) for a while everything runs smoothly, gflags seems to be installed OK. However, when compiling glog, I receive the error message: fatal error:       &#x27;gflags/gflags.h&#x27; file not found&lt;/p&gt;&lt;p&gt;The missing file is found in the generated code, so I guess that some switches/options are set in some incorrect way. Or, the other thing that I download the files from a wrong site. (I found and downloaded several pathched glog files, they all present me error messages, with different ones.) How can I fix it? (I would prefer a non-manual patch)&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Download and install GoogleFlagsExternalProject_Add(gflagsURL https://github.com/gflags/gflags/archive/master.zipPREFIX ${CMAKE_CURRENT_BINARY_DIR}/gflagsINSTALL_COMMAND &quot;&quot;)# Create a libgflags target to be used as a dependency by test programsadd_library(libgflags IMPORTED STATIC GLOBAL)add_dependencies(libgflags gflags)# Set gflag propertiesExternalProject_Get_Property(gflags source_dir binary_dir)set_target_properties(libgflags PROPERTIES&quot;IMPORTED_LOCATION&quot; &quot;${binary_dir}/libgflags.a&quot;&quot;IMPORTED_LINK_INTERFACE_LIBRARIES&quot; &quot;${CMAKE_THREAD_LIBS_INIT}&quot;)include_directories(&quot;${source_dir}/include&quot;)# Download and install GoogleLogExternalProject_Add(glogURL https://github.com/emzeat/google-glog/archive/master.zipPREFIX ${CMAKE_CURRENT_BINARY_DIR}/glogINSTALL_COMMAND &quot;&quot;)# Create a libglog target to be used as a dependency by test programsadd_library(libglog IMPORTED STATIC GLOBAL)add_dependencies(libglog glog)# Set glog propertiesExternalProject_Get_Property(glog source_dir binary_dir)set_target_properties(libglog PROPERTIES&quot;IMPORTED_LOCATION&quot; &quot;${binary_dir}/libglog.a&quot;&quot;IMPORTED_LINK_INTERFACE_LIBRARIES&quot; &quot;${CMAKE_THREAD_LIBS_INIT}&quot;#    &quot;INTERFACE_INCLUDE_DIRECTORIES&quot; &quot;${source_dir}/include&quot;)# I couldn&#x27;t make it work with INTERFACE_INCLUDE_DIRECTORIESinclude_directories(&quot;${source_dir}/include&quot;)&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>c++,cmake,gflags,glog</Tags>
</question>
</qroot>
