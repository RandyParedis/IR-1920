<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Error using .after</Title>
<Body>&lt;p&gt;I&#x27;m using tkinter to create a updating gui. I want to update my frame using the &lt;code&gt;after()&lt;/code&gt; method. I however receive the following error: &lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;&#x27;gui&#x27; object has no attribute &#x27;after&#x27;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;I&#x27;ve googled for answers but haven&#x27;t found any that help me solve the problem. &lt;/p&gt;&lt;p&gt;The following code is only and example of my problem (real code is to long to post):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import time, random, timeit,tkinter as tkclass gui:    def __init__(self,simulation_time,job_done,totaljobs,go_is_true):        self.root = tk.Tk()        self.root.title(&quot;Storage Rack Simutlation&quot;)        height = 400        width = 600        size = str(width) + &quot;x&quot; + str(height)        self.root.geometry(size)            self.root.resizable(width=&#x27;FALSE&#x27;, height=&#x27;FALSE&#x27;)        self.update(simulation_time,job_done,totaljobs,go_is_true)    def update(self,simulation_time,job_done,totaljobs,go_is_true):        print(simulation_time,job_done,totaljobs)        simulation_time += 1         job_done += random.randint(0,5)        self.after(1000,self.update(simulation_time,job_done,totaljobs,go_is_true))    def run(self):        self.root.mainloop()app=gui(5,3,100,True)app.run()&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,class,user-interface,tkinter</Tags>
</question>
<answer>
<Body>&lt;p&gt;There are at least two big problems. The first one is perfectly described by the error message &quot;gui object has no attribute after&quot;. Looking at your code, it&#x27;s clear that your gui class does not define an &lt;code&gt;after&lt;/code&gt; function. &lt;/p&gt;&lt;p&gt;Most likely you are intending to call the tkinter &lt;code&gt;after&lt;/code&gt; function that is present on all tkinter widgets. You need to modify your code to call &lt;code&gt;after&lt;/code&gt; on a widget. For example:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;self.root.after(...)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The second problem is that this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;self.after(1000,self.update(simulation_time,job_done,totaljobs,go_is_true))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;... is exactly the same as this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;result = self.update(simulation_time,job_done,totaljobs,go_is_true)self.after(1000, result)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you want to use &lt;code&gt;after&lt;/code&gt; you must give it a reference to a function. Function arguments can appear as additional arguments. Solving these two problems together gives you this final working version:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;self.root.after(1000, self.update, simulation_time, job_done, totaljobs, go_is_true)&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
