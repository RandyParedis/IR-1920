<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Python - function as class attribute becomes a bound method</Title>
<Body>&lt;p&gt;I noticed that if I define a class attribute equal to a function when I create an instance of that class the attribute becomes a bound method. Can someone explain me the reason of this behaviour?&lt;/p&gt;&lt;pre&gt;&lt;code&gt;In [9]: def func():   ...:     pass   ...: In [10]: class A(object):   ....:     f = func   ....:     In [11]: a = A()In [12]: a.fOut[12]: &amp;lt;bound method A.func of &amp;lt;__main__.A object at 0x104add190&amp;gt;&amp;gt;In [13]: a.f()---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)&amp;lt;ipython-input-13-19134f1ad9a8&amp;gt; in &amp;lt;module&amp;gt;()----&amp;gt; 1 a.f()    global a.f = &amp;lt;bound method A.func of &amp;lt;__main__.A object at 0x104add190&amp;gt;&amp;gt;TypeError: func() takes no arguments (1 given)&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,methods,class-attributes</Tags>
</question>
<answer>
<Body>&lt;p&gt;Python is &lt;em&gt;not&lt;/em&gt; a message based OO system&lt;sup&gt;1&lt;/sup&gt;. Instead, similar to JavaScript, properties are resolved to first-class functions and then invoked; the behavior differs a bit in the mechanics of such, as discovered.&lt;/p&gt;&lt;p&gt;In Python the requirement is that methods have at least one parameter, normally called &lt;code&gt;self&lt;/code&gt;, that will be automatically supplied the associated instance &lt;em&gt;when&lt;/em&gt; it is invoked as a method.&lt;/p&gt;&lt;p&gt;Furthermore (and perhaps to the point of the question), Python does not differentiate between using &lt;code&gt;def f..&lt;/code&gt; or &lt;code&gt;f = some_func()&lt;/code&gt; when establishing instance member bindings; arguably this matches behavior outside of classes.&lt;/p&gt;&lt;p&gt;In the example, assigning the function to the instance &#x27;makes it expect to be treated like an instance method&#x27;. It is the exact same - parameterless - function called in both cases; only the future usage of such is relevant.&lt;/p&gt;&lt;p&gt;Now, unlike JavaScript, Python handles methods and object association through the concept of bound methods - functions resolved as methods are always &#x27;bound&#x27;.&lt;/p&gt;&lt;p&gt;The behavior of &lt;code&gt;a.f&lt;/code&gt; returning a bound method - function that will automatically supply the bound object to the first parameter as &lt;code&gt;self&lt;/code&gt; - is done independently of the source of the function. In this case that means the parameterless function cannot be used when it is &#x27;bound&#x27; as it does not accept a &lt;code&gt;self&lt;/code&gt; parameter.&lt;/p&gt;&lt;p&gt;As a demonstration, the following will fail in the same way because the source underlying method does &lt;em&gt;not&lt;/em&gt; meet the minimum requirements of accepting the instance as an argument:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;g = a.fg()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In this case calling &lt;code&gt;g()&lt;/code&gt; is equivalent to calling &lt;code&gt;func(a)&lt;/code&gt;.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; For comparison, Java, C#, Ruby, and SmallTalk are message based OO systems - in these an object is told to invoke a method by a &#x27;name&#x27;, instead of resolving a method (or function) as a value which can be invoked.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;You asigned a function to the attribute &lt;code&gt;f&lt;/code&gt;. Cause the function is now inside a class it becomes a method, specifically a bound method (cause it&#x27;s bounded to the object, &lt;a href=&quot;https://stackoverflow.com/questions/35174759/whats-the-difference-between-a-function-method-and-bound-method-in-pytho&quot;&gt;further explanation here&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;Methods in classes receive at least one parameter (&lt;code&gt;self&lt;/code&gt;), unless it&#x27;s specifically told to not - see &lt;a href=&quot;https://stackoverflow.com/questions/12179271/python-classmethod-and-staticmethod-for-beginner&quot;&gt;class methods and static methods&lt;/a&gt; -, for this reason the error says that &lt;code&gt;func&lt;/code&gt; takes no arguments (as it&#x27;s defined as &lt;code&gt;def func():&lt;/code&gt;) but received 1 (&lt;code&gt;self&lt;/code&gt;)&lt;/p&gt;&lt;p&gt;To do what you want, you should tell python that you&#x27;re using a &lt;a href=&quot;https://docs.python.org/2/library/functions.html#staticmethod&quot; rel=&quot;noreferrer&quot;&gt;static method&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;def func():    passclass A(object):    f = staticmethod(func)&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
