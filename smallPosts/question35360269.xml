<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Convert email (rfc 2822) date string to another format (ISO 8601 timestamp) in Python 2.7</Title>
<Body>&lt;p&gt;I have dates of this format &lt;code&gt;Thu, 18 Feb 2016 15:33:10 +0200&lt;/code&gt;&lt;/p&gt;&lt;p&gt;and I want them transformed to &lt;code&gt;2016-02-12 08:39:09.653475&lt;/code&gt;&lt;/p&gt;&lt;p&gt;How can this be achieved with the Python&#x27;s standard library?&lt;/p&gt;</Body>
<Tags>python,datetime</Tags>
</question>
<answer>
<Body>&lt;p&gt;You can do this with the &lt;code&gt;datetime&lt;/code&gt; module as follows:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from datetime import datetimed = &#x27;Thu, 18 Feb 2016 15:33:10 +0200&#x27;datetime.strptime(d, &#x27;%a, %d %b %Y %H:%M:%S %z&#x27;).strftime(&#x27;%Y-%m-%d %H:%M:%S.%f&#x27;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or in python2 you may use instead:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from datetime import datetimefrom dateutil.parser import parsed = &#x27;Thu, 18 Feb 2016 15:33:10 +0200&#x27;datetime.strftime(parse(d), &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or if need to stick with standard library have a look at J.F.Sebastian&#x27;s comment at &lt;a href=&quot;https://stackoverflow.com/questions/1101508/how-to-parse-dates-with-0400-timezone-string-in-python&quot;&gt;How to parse dates with -0400 timezone string in python?&lt;/a&gt;&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;check this link &lt;a href=&quot;https://stackoverflow.com/questions/311627/how-to-print-date-in-a-regular-format-in-python/18944849#18944849&quot;&gt;How to print date in a regular format in Python?&lt;/a&gt; &lt;/p&gt;&lt;pre&gt;&lt;code&gt;import timeimport datetimeprint &quot;Time in seconds since the epoch: %s&quot; %time.time()print &quot;Current date and time: &quot; , datetime.datetime.now()print &quot;Or like this: &quot; ,datetime.datetime.now().strftime(&quot;%y-%m-%d-%H-%M&quot;)print &quot;Current year: &quot;, datetime.date.today().strftime(&quot;%Y&quot;)print &quot;Month of year: &quot;, datetime.date.today().strftime(&quot;%B&quot;)print &quot;Week number of the year: &quot;, datetime.date.today().strftime(&quot;%W&quot;)print &quot;Weekday of the week: &quot;, datetime.date.today().strftime(&quot;%w&quot;)print &quot;Day of year: &quot;, datetime.date.today().strftime(&quot;%j&quot;)print &quot;Day of the month : &quot;, datetime.date.today().strftime(&quot;%d&quot;)print &quot;Day of week: &quot;, datetime.date.today().strftime(&quot;%A&quot;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That will print out something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Time in seconds since the epoch:    1349271346.46Current date and time:              2012-10-03 15:35:46.461491Or like this:                       12-10-03-15-35Current year:                       2012Month of year:                      OctoberWeek number of the year:            40Weekday of the week:                3Day of year:                        277Day of the month :                  03Day of week:                        Wednesday&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;To parse the input date format using only stdlib, you could use &lt;code&gt;email.utils&lt;/code&gt; package:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from datetime import datetime, timedelta&amp;gt;&amp;gt;&amp;gt; from email.utils import parsedate_tz, mktime_tz&amp;gt;&amp;gt;&amp;gt; timestamp = mktime_tz(parsedate_tz(&#x27;Thu, 18 Feb 2016 15:33:10 +0200&#x27;))&amp;gt;&amp;gt;&amp;gt; utc_time = datetime(1970, 1, 1) + timedelta(seconds=timestamp)&amp;gt;&amp;gt;&amp;gt; str(utc_time)&#x27;2016-02-18 13:33:10&#x27;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;where &lt;code&gt;str(dt)&lt;/code&gt; is equivalent to &lt;code&gt;dt.isoformat(&#x27; &#x27;)&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;If you need to support leap seconds; (assuming your platform supports  them) use &lt;code&gt;tt = time.gmtime(timestamp)&lt;/code&gt; and &lt;code&gt;time.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;, tt)&lt;/code&gt;. Note: &lt;code&gt;time.gmtime()&lt;/code&gt; may have different limits on different platforms (that are probably less than &lt;code&gt;datetime&lt;/code&gt;&#x27;s limits).&lt;/p&gt;</Body>
</answer>
</qroot>
