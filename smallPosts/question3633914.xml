<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Adobe Air2 NativeProcess API with Javascript</Title>
<Body>&lt;p&gt;I am trying to launch a python script with the NativeProcess API from Javascript.On the &lt;a href=&quot;http://help.adobe.com/en_US/air/reference/html/flash/desktop/NativeProcess.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;Adobe AIR API Reference for HTML Developers&lt;/a&gt; I found a good example for that task, but it does not work. I looked up tons of other examples but still can not find the answer.&lt;/p&gt;&lt;p&gt;Here is the example code for the html file:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;   &amp;lt;head&amp;gt;   &amp;lt;title&amp;gt;Test&amp;lt;/title&amp;gt;   &amp;lt;script type=&quot;text/javascript&quot; src=&quot;AIRAliases.js&quot;&amp;gt;&amp;lt;/script&amp;gt;   &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;         var process;        function launchProcess()        {            if(air.NativeProcess.isSupported)            {                air.trace(&quot;NativeProcess supported.&quot;);    setupAndLaunch();            }            else            {                air.trace(&quot;NativeProcess not supported.&quot;);            }        }        function setupAndLaunch()        {                 var nativeProcessStartupInfo = new air.NativeProcessStartupInfo();            var file = air.File.applicationDirectory.resolvePath(&quot;test.py&quot;);            nativeProcessStartupInfo.executable = file;            var processArgs = new air.Vector[&quot;&amp;lt;String&amp;gt;&quot;]();            processArgs.push(&quot;foo&quot;);            nativeProcessStartupInfo.arguments = processArgs;            process = new air.NativeProcess();            process.start(nativeProcessStartupInfo);            process.addEventListener(air.ProgressEvent.STANDARD_OUTPUT_DATA, onOutputData);            process.addEventListener(air.ProgressEvent.STANDARD_ERROR_DATA, onErrorData);            process.addEventListener(air.NativeProcessExitEvent.EXIT, onExit);            process.addEventListener(air.IOErrorEvent.STANDARD_OUTPUT_IO_ERROR, onIOError);            process.addEventListener(air.IOErrorEvent.STANDARD_ERROR_IO_ERROR, onIOError);        }        function onOutputData()        {            air.trace(&quot;Got: &quot;, process.standardOutput.readUTFBytes(process.standardOutput.bytesAvailable));         }        function onErrorData(event)        {            air.trace(&quot;ERROR -&quot;, process.standardError.readUTFBytes(process.standardError.bytesAvailable));         }        function onExit(event)        {            air.trace(&quot;Process exited with &quot;, event.exitCode);        }        function onIOError(event)        {             air.trace(event.toString());        }   &amp;lt;/script&amp;gt;   &amp;lt;/head&amp;gt;   &amp;lt;body onload=&quot;launchProcess()&quot;&amp;gt;   &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And here the code for the python file (it does not work):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#! /usr/bin/env python2.5# -*- coding: utf-8 -*-import sysfor word in sys.argv: #echo the command line arguments print wordprint &quot;HI FROM PYTHON&quot;print &quot;Enter user name&quot; line = sys.stdin.readline()sys.stdout.write(&quot;hello,&quot; + line)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Running the Air App with the command &lt;code&gt;adl main.xml&lt;/code&gt; shows in my terminal (I use OSX) only &quot;NativeProcess supported.&quot;&lt;/p&gt;&lt;p&gt;Thanks for help.&lt;/p&gt;&lt;p&gt;And here the changes I did to the python file to get it working:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#! /usr/bin/env python2.5# -*- coding: utf-8 -*-import sysimport osdef convert(args): path = os.path.expanduser(&#x27;~&#x27;) + &quot;/Desktop/&quot; myFile = open(path+args, &#x27;w&#x27;) myFile.write(&#x27;Hello World\n&#x27;) myFile.close() sys.stdout.write(&quot;Python Done&quot;)if __name__ == &quot;__main__&quot;: convert(sys.argv[1])&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Thanks to pyfunc...&lt;/p&gt;</Body>
<Tags>javascript,python,air</Tags>
</question>
<answer>
<Body>&lt;p&gt;If you run your program, then following is the output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;test.pyHI FROM PYTHONEnter user name&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Thats is this piece of python code is looking for standard input and writing to standard output.I don&#x27;t think that would be possible if you do not run that from shell.&lt;/p&gt;&lt;p&gt;How about removing:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;line = sys.stdin.readline()sys.stdout.write(&quot;hello,&quot; + line)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and do some innocuous python expressions like &lt;/p&gt;&lt;pre&gt;&lt;code&gt;a = 1+4 &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and see, if that works. I have a hunch that this might be an issue.&lt;/p&gt;</Body>
</answer>
</qroot>
