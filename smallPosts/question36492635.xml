<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How to read JSON file with multiple JSON objects in Python?</Title>
<Body>&lt;p&gt;So here is the standard way to read in a JSON file in python&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import jsonfrom pprint import pprintwith open(&#x27;ig001.json&#x27;) as data_file:        data = json.load(data_file)pprint(data)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However, my JSON file that I want to read has multiple JSON objects in it. So it looks something like:&lt;/p&gt;&lt;p&gt;[{},{}....]&lt;/p&gt;&lt;p&gt;[{},{}....]&lt;/p&gt;&lt;p&gt;Where this represents 2 JSON objects, and inside each object inside each {}, there are a bunch of key:value pairs. &lt;/p&gt;&lt;p&gt;So when I try to read this using the standard read code that I have above, I get the error:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;Traceback (most recent call last):    File &quot;jsonformatter.py&quot;, line 5, in       data = json.load(data_file)    File &quot;/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/&lt;strong&gt;init&lt;/strong&gt;.py&quot;, line 290, in load      **kw)    File &quot;/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/&lt;strong&gt;init&lt;/strong&gt;.py&quot;, line 338, in loads      return _default_decoder.decode(s)    File &quot;/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/decoder.py&quot;, line 369, in decode      raise ValueError(errmsg(&quot;Extra data&quot;, s, end, len(s)))  ValueError: Extra data: line 3889 column 2 - line 719307 column 2 (char 164691 - 30776399)&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Where line 3889 is where the first JSON object ends and the next one begins, the line itself looks like &quot;][&quot;. &lt;/p&gt;&lt;p&gt;Any ideas on how to fix this would be appreciated, thanks!&lt;/p&gt;</Body>
<Tags>python,json</Tags>
</question>
<answer>
<Body>&lt;p&gt;Without a link your JSON file, I&#x27;m going to have to make some assumptions:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Top-level json arrays are not each on their own line (since the first parsing error is on line 3889), so we can&#x27;t easily &lt;/li&gt;&lt;li&gt;This is the only type of invalid JSON present in the file.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To fix this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 1. replace instances of `][` with `]&amp;lt;SPLIT&amp;gt;[`# (`&amp;lt;SPLIT&amp;gt;` needs to be something that is not present anywhere in the file to begin with)raw_data = data_file.read()  # we&#x27;re going to need the entire file in memorytweaked_data = raw_data.replace(&#x27;][&#x27;, &#x27;]&amp;lt;SPLIT&amp;gt;[&#x27;)# 2. split the string into an array of strings, using the chosen split indicatorsplit_data = tweaked_data.split(&#x27;&amp;lt;SPLIT&amp;gt;&#x27;)# 3. load each string individuallyparsed_data = [json.loads(bit_of_data) for bit_of_data in split_data]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(pardon the horrible variable names)&lt;/p&gt;</Body>
</answer>
</qroot>
