<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Reliable timer in a console application</Title>
<Body>&lt;p&gt;I am aware that in &lt;a href=&quot;http://en.wikipedia.org/wiki/.NET_Framework&quot; rel=&quot;noreferrer&quot;&gt;.NET&lt;/a&gt; there are three timer types (see &lt;em&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/magazine/cc164015.aspx&quot; rel=&quot;noreferrer&quot;&gt;Comparing the Timer Classes in the .NET Framework Class Library&lt;/a&gt;&lt;/em&gt;). I have chosen a threaded timer as the other types can drift if the main thread is busy, and I need this to be reliable.&lt;/p&gt;&lt;p&gt;The way this timer works in the control of the timer is put on another thread so it can always tick along with the work begin completed on the parent thread when it is not busy.&lt;/p&gt;&lt;p&gt;The issue with this timer in a console application is that while the timer is ticking along on another thread the main thread is not doing anything to the application closes.&lt;/p&gt;&lt;p&gt;I tried adding a &lt;code&gt;while true&lt;/code&gt; loop, but then the main thread is too busy when the timer does go off.&lt;/p&gt;</Body>
<Tags>c#,.net,vb.net,timer</Tags>
</question>
<answer>
<Body>&lt;p&gt;Consider using a &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.threading.manualresetevent.aspx&quot; rel=&quot;noreferrer&quot; title=&quot;MSDN Reference&quot;&gt;ManualResetEvent&lt;/a&gt; to block the main thread at the end of its processing, and call &lt;code&gt;Reset()&lt;/code&gt; on it once the timer&#x27;s processing has finished.  If this is something that needs to run constantly, consider moving this into a service process instead of a console app.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;You can use something like &lt;code&gt;Console.ReadLine()&lt;/code&gt; to block the main thread, so other background threads (like timer threads) will still work. You may also use an &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.threading.autoresetevent.aspx&quot; rel=&quot;noreferrer&quot;&gt;AutoResetEvent&lt;/a&gt; to block the execution, then (when you need to) you can call Set() method on that AutoResetEvent object to release the main thread. Also ensure that your reference to Timer object doesn&#x27;t go out of scope and garbage collected.&lt;/p&gt;</Body>
</answer>
</qroot>
