<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Function not calling properly</Title>
<Body>&lt;pre&gt;&lt;code&gt;def main():    def load():        name=0        count=0        totalpr=0        name=input(&quot;Enter stock name OR -999 to Quit: &quot;)        while name != &#x27;-999&#x27;:            count=count+1            shares=int(input(&quot;Enter number of shares: &quot;))            pp=float(input(&quot;Enter purchase price: &quot;))            sp=float(input(&quot;Enter selling price: &quot;))            commission=float(input(&quot;Enter commission: &quot;))            name = input(&quot;Enter stock name OR -999 to Quit: &quot;)    def calc():        amount_paid=shares*pp        commission_paid_purchase=amount_paid*commission        amount_sold=shares*sp        commission_paid_sale=amount_sold*commission        profit_loss=(amount_sold - commission_paid_sale) -(amount_paid + commission_paid_purchase)        totalpr=totalpr+profit_loss    def print():        print(&quot;\nStock Name:&quot;, name)        print(&quot;Amount paid for the stock:       $&quot;,      format(amount_paid, &#x27;10,.2f&#x27;))        print(&quot;Commission paid on the purchase: $&quot;, format(commission_paid_purchase, &#x27;10,.2f&#x27;))        print(&quot;Amount the stock sold for:       $&quot;, format(amount_sold, &#x27;10,.2f&#x27;))        print(&quot;Commission paid on the sale:     $&quot;, format(commission_paid_sale, &#x27;10,.2f&#x27;))        print(&quot;Profit (or loss if negative):    $&quot;, format(profit_loss, &#x27;10,.2f&#x27;))        print(&quot;Total Profit is $&quot;, format(totalpr, &#x27;10,.2f&#x27;))        return main()load() #to input the valuescalc()print()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&#x27;m not sure what I&#x27;m doing wrong: &lt;/p&gt;&lt;p&gt;Should I be putting in variable names into &lt;code&gt;def load():&lt;/code&gt;, &lt;code&gt;def calc():&lt;/code&gt; and &lt;code&gt;def print():&lt;/code&gt;? &lt;/p&gt;&lt;p&gt;As I run it now, it says &lt;code&gt;&quot;load&quot;&lt;/code&gt; is not defined. How would I go about defining &lt;code&gt;load&lt;/code&gt;? And for that matter, if I didn&#x27;t define &lt;code&gt;def calc():&lt;/code&gt; and &lt;code&gt;def print():&lt;/code&gt; how do I define those? &lt;/p&gt;&lt;p&gt;I do properly call them at the end of the code, in the order that I&#x27;d like to call them -- &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;calc&lt;/code&gt;, and then &lt;code&gt;print&lt;/code&gt;. &lt;/p&gt;&lt;p&gt;Is my &quot;&lt;code&gt;return main()&lt;/code&gt;&quot; the right thing to do? I don&#x27;t know, I Just want this code to run properly without error that&#x27;s all. I&#x27;m under the impression that I&#x27;m just missing a few things. Any help would be appreciated. &lt;/p&gt;</Body>
<Tags>python,function,python-3.x,calling-convention</Tags>
</question>
<answer>
<Body>&lt;p&gt;yikes.&lt;br&gt;your first mistake: calling a function in another function. Maybe you meant to do  &lt;/p&gt;&lt;pre&gt;&lt;code&gt;class com.stackoverflow.Main:    def load(self):        #do a thing&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then you&#x27;d have to do  &lt;/p&gt;&lt;pre&gt;&lt;code&gt;main = com.stackoverflow.Main()main.load()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;your second mistake was defining a new a print() function that uses print functions, as one already exists. Rename it, as that will cause a huge error&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;You are defining &lt;code&gt;load()&lt;/code&gt; inside the scope of &lt;code&gt;main()&lt;/code&gt;. This means you cannot use the function outside of &lt;code&gt;main()&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The easy solution is that you should put your function defines for load, calc, and print outside of the definition of &lt;code&gt;main()&lt;/code&gt; (btw, call it something else like &lt;code&gt;print_stock info&lt;/code&gt;, print is already a function!) &lt;/p&gt;&lt;p&gt;You also do not need to &lt;code&gt;return main()&lt;/code&gt;. I am unsure what you are trying to do, but it is not necessary at all.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;This is a minimal working example to illustrate how one can solve what you are trying to do.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# com.stackoverflow.helper for interpreting inputimport ast#: initial starting valuesthing, count, cost, total = &#x27;Nothing&#x27;, 0, 0, 0# define all functions at module indentationdef get_user_input():    global thing, count, cost  # write to the GLOBAL names thing, count and cost    thing = input(&#x27;What have you?&#x27;)  # ask for a string    count = ast.literal_eval(input(&#x27;How much do you have?&#x27;))  # ask for a string and interpret it: &quot;3.2&quot; =&amp;gt; float    cost = ast.literal_eval(input(&#x27;How much does each cost?&#x27;))def compute():    global total  # write to global name total    total = count * cost  # can read from global namesdef pretty_print():  # not named print! we still need print to print!    print(&quot;You have&quot;, count, thing)    print(&quot;At&quot;, cost, &quot;each, that makes&quot;, total, &quot;in total&quot;)# call functions at module indentationget_user_input()  # ducks, 3, 42compute()pretty_print()# You have 3 ducks# At 42 each, that makes 126 in total&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;One thing to warn you about: working with global variables is generally a bad idea. For a small script it&#x27;s fine, but you&#x27;ve already messed up the basics - globals are tricky, so avoid them whenever possible. If you just want to run these commands, do not write them as functions, execute them directly. Basically, leave away the &lt;code&gt;def ...&lt;/code&gt; and &lt;code&gt;global ...&lt;/code&gt; lines and put everything on the same indentation, then remove the last three lines.&lt;/p&gt;&lt;p&gt;If you really want to store and print multiple things, you need to use containers. Just assigning to a value in a loop, e.g. &lt;code&gt;thing = input(&#x27;What have you?&#x27;)&lt;/code&gt;, will leave it at the last value entered. Instead, you need a container like a &lt;code&gt;list&lt;/code&gt;. You can then &lt;code&gt;append&lt;/code&gt; additional values to it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;container = []  # [] is a list literalfor _ in range(3):  # non-infinite loop    next_thing = ast.literal_eval(input(&#x27;Place your order...\n&#x27;))    container.append(next_thing)print(&quot;You ordered&quot;, container)&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;pre&gt;&lt;code&gt;def load():        global name    global count    global shares    global pp    global sp    global commission    name=input(&quot;Enter stock name OR -999 to Quit: &quot;)    count =0    while name != &#x27;-999&#x27;:        count=count+1        shares=int(input(&quot;Enter number of shares: &quot;))        pp=float(input(&quot;Enter purchase price: &quot;))        sp=float(input(&quot;Enter selling price: &quot;))        commission=float(input(&quot;Enter commission: &quot;))        calc()        display()        name=input(&quot;\nEnter stock name OR -999 to Quit: &quot;)def calc():    global amount_paid    global amount_sold    global profit_loss    global commission_paid_sale    global commission_paid_purchase    global totalpr    totalpr=0    amount_paid=shares*pp    commission_paid_purchase=amount_paid*commission    amount_sold=shares*sp    commission_paid_sale=amount_sold*commission    profit_loss=(amount_sold - commission_paid_sale) -(amount_paid + commission_paid_purchase)    totalpr=totalpr+profit_lossdef display():    print(&quot;\nStock Name:&quot;, name)    print(&quot;Amount paid for the stock:       $&quot;,      format(amount_paid, &#x27;10,.2f&#x27;))    print(&quot;Commission paid on the purchase: $&quot;, format(commission_paid_purchase, &#x27;10,.2f&#x27;))    print(&quot;Amount the stock sold for:       $&quot;, format(amount_sold, &#x27;10,.2f&#x27;))    print(&quot;Commission paid on the sale:     $&quot;, format(commission_paid_sale, &#x27;10,.2f&#x27;))    print(&quot;Profit (or loss if negative):    $&quot;, format(profit_loss, &#x27;10,.2f&#x27;))def main():    load()main()print(&quot;\nTotal Profit is $&quot;, format(totalpr, &#x27;10,.2f&#x27;))&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
