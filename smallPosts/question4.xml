<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Convert Decimal to Double?</Title>
<Body>&lt;p&gt;I want to use a track-bar to change a form&#x27;s opacity.&lt;/p&gt;&lt;p&gt;This is my code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;decimal trans = trackBar1.Value / 5000;this.Opacity = trans;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When I build the application, it gives the following error:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;Cannot implicitly convert type &lt;code&gt;&#x27;decimal&#x27;&lt;/code&gt; to &lt;code&gt;&#x27;double&#x27;&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;I tried using &lt;code&gt;trans&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; but then the control doesn&#x27;t work. This code worked fine in a past VB.NET project.&lt;/p&gt;</Body>
<Tags>c#,floating-point,type-conversion,double,decimal</Tags>
</question>
<answer>
<Body>&lt;p&gt;An explicit cast to double like this isn&#x27;t necessary:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;double trans = (double) trackBar1.Value / 5000.0;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Identifying the constant as &lt;code&gt;5000.0&lt;/code&gt; (or as &lt;code&gt;5000d&lt;/code&gt;) is sufficient:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;double trans = trackBar1.Value / 5000.0;double trans = trackBar1.Value / 5000d;&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;It sounds like &lt;code&gt;this.Opacity&lt;/code&gt; is a double value, and the compiler doesn&#x27;t like you trying to cram a decimal value into it.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;A more generic answer for the generic question &quot;Decimal vs Double?&quot;: &lt;strong&gt;Decimal&lt;/strong&gt; for monetary calculations to preserve the precision, &lt;strong&gt;Double&lt;/strong&gt; for scientific calculations that do not get affected by small differences. Since Double is a type which is native to the CPU (internal representation is stored in &lt;em&gt;base 2&lt;/em&gt;), calculations made with Double perform better then Decimal (which is represented in &lt;em&gt;base 10&lt;/em&gt; internally).&lt;/p&gt;</Body>
</answer>
</qroot>
