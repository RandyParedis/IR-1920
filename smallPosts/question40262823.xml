<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>&quot;Stale file handle&quot; error, when process trying read the file, that other process already had deleted</Title>
<Body>&lt;p&gt;I&#x27;m writing stress test suite for testing distributed file systems over NFS.&lt;/p&gt;&lt;p&gt;In some cases when some process deletes file, while some other process attempts to read from it, I&#x27;m getting &quot;Stale file handle&quot; error (116).&lt;/p&gt;&lt;p&gt;Is that kind of error is expected and acceptable in such raise condition?&lt;/p&gt;&lt;p&gt;Test working as follows:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Starting x number of client machines&lt;/li&gt;&lt;li&gt;Each client machine runs y processes&lt;/li&gt;&lt;li&gt;Each process can do any file operation as stat/read/delete/open&lt;/li&gt;&lt;li&gt;Mentioned file ops are standard python methods - os.stat/read/os.remove/open&lt;/li&gt;&lt;li&gt;All files are empty 0 bytes data&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;File is exists, as successful &lt;code&gt;stat&lt;/code&gt; operation shows:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;controller_debug.log.2:2016-10-26 15:02:30,156;INFO -  [LG-E27A-LNX:0xa]: finished 640522b4d94c453ea545cb86568320ca, result:  success | stat |  /JUyw481MfvsBHOm1KQu7sHRB6ffAXKjwIATlsXmOgWh8XKQaIrPbxLgAo7sucdAM/o6V266xE8bTaUGzk8YDMfDAJp0YIfbT4fIK1oZ2R20tRX3xFCvjISj7WuMEwEV41  | data: {} | 2016/10/26 15:02:30.156&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Process &lt;code&gt;0x1&lt;/code&gt; on client &lt;code&gt;CLIENT-A&lt;/code&gt; completed successful delete:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;controller_debug.log.2:2016-10-26 15:02:30,164;INFO -  [CLIENT-A:0x1]: finished 5f5dfe6a06de495f851745a78857eec1, result:  success | delete |  /JUyw481MfvsBHOm1KQu7sHRB6ffAXKjwIATlsXmOgWh8XKQaIrPbxLgAo7sucdAM/o6V266xE8bTaUGzk8YDMfDAJp0YIfbT4fIK1oZ2R20tRX3xFCvjISj7WuMEwEV41  | data: {} | 2016/10/26 15:02:30.161&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3 milliseconds later, process &lt;code&gt;0xb&lt;/code&gt; on client &lt;code&gt;CLIENT-B&lt;/code&gt; failed &quot;read&quot; op due to &quot;Stale file handle&quot; &lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;controller_debug.log.2:2016-10-26 15:02:30,164;INFO -  [CLIENT-B:0xb]: finished e84e2064ead042099310af1bd44821c0, result:  failed | read |  /mnt/DIRSPLIT-node0.b27-1/JUyw481MfvsBHOm1KQu7sHRB6ffAXKjwIATlsXmOgWh8XKQaIrPbxLgAo7sucdAM/o6V266xE8bTaUGzk8YDMfDAJp0YIfbT4fIK1oZ2R20tRX3xFCvjISj7WuMEwEV41  | [errno:116] | Stale file handle | 142 | data: {} | 2016/10/26  15:02:30.160 controller_debug.log.2:2016-10-26 15:02:30,164;ERROR -  Operation read FAILED UNEXPECTEDLY on File  JUyw481MfvsBHOm1KQu7sHRB6ffAXKjwIATlsXmOgWh8XKQaIrPbxLgAo7sucdAM/o6V266xE8bTaUGzk8YDMfDAJp0YIfbT4fIK1oZ2R20tRX3xFCvjISj7WuMEwEV41  due to Stale file handle&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Thanks&lt;/p&gt;</Body>
<Tags>python,linux,nfs</Tags>
</question>
<answer>
<Body>&lt;p&gt;This is totally expected.  The NFS specification is clear about use of file handles after an object (be it file or directory) has been deleted.  &lt;a href=&quot;https://tools.ietf.org/html/rfc7530#section-4&quot; rel=&quot;nofollow&quot;&gt;Section 4&lt;/a&gt; clearly addresses this.  For example:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;The persistent filehandle will become stale or invalid when the file system object is removed.  When the server is presented with a persistent filehandle that refers to a deleted object, it MUST return an error of NFS4ERR_STALE.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This is such a common problem, it even has its own entry in section A.10 of the &lt;a href=&quot;http://nfs.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;NFS FAQ&lt;/a&gt;, which says one common cause of ESTALE errors is that:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;The file handle refers to a deleted file. After a file is deleted on the server, clients don&#x27;t find out until they try to access the file with a file handle they had cached from a previous LOOKUP. Using rsync or mv to replace a file while it is in use on another client is a common scenario that results in an ESTALE error.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The expected resolution is that your client app must close and reopen the file to see what has happened.  Or, as the FAQ says:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;... to recover from an ESTALE error, an application must close the file or directory where the error occurred, and reopen it so the NFS client can resolve the pathname again and retrieve the new file handle.&lt;/p&gt;&lt;/blockquote&gt;</Body>
</answer>
</qroot>
