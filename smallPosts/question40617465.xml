<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>class member function resulting in error &quot;non-class type&quot;</Title>
<Body>&lt;p&gt;I want to have a simple example class (a box) that has a vector data member that stores the dimensions of the box. I have attempted to code the class such that a vector can be passed to it as an argument on instantiation. There is a simple member function of the class that is intended to give a printout of the dimensions vector. When I attempt to compile, I am presented with an error about requesting the member function saying that the function is of a &quot;non-class type&quot;. How should I approach this error?&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;using std::cout;using std::endl;class Box{    public:        Box(            std::vector&amp;lt;double&amp;gt; dimensions        );        void display_dimensions();    private:        std::vector&amp;lt;double&amp;gt; m_dimensions;};Box::Box(    std::vector&amp;lt;double&amp;gt; dimensions    ):    m_dimensions(dimensions){    }void Box::display_dimensions(){    for(unsigned int i = 0; i &amp;lt; m_dimensions.size(); i++){        std::cout            &amp;lt;&amp;lt; &quot;element[&quot; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &quot;] = &quot; &amp;lt;&amp;lt; m_dimensions[i]            &amp;lt;&amp;lt; std::endl;    }    std::cout &amp;lt;&amp;lt; std::endl;}int main(){    // Create an instance of a box and set its dimensions vector data member.    Box box_A(        std::vector&amp;lt;double&amp;gt; dimensions = {78.0, 24.0, 18.0} // dimensions    );    // Get the box instance to display its dimensions.    cout &amp;lt;&amp;lt; &quot;dimensions of box_A:&quot; &amp;lt;&amp;lt; endl;    box_A.display_dimensions()}&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>c++,class,vector,member-functions</Tags>
</question>
<answer>
<Body>&lt;p&gt;This is not how you would call a constructor with an argument:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Box box_A(    std::vector&amp;lt;double&amp;gt; dimensions = {78.0, 24.0, 18.0});&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can&#x27;t call a constructor (or any function) with a variable declaration, you have to move it before the call and pass the variable:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;std::vector&amp;lt;double&amp;gt; dimensions = {78.0, 24.0, 18.0};Box box_A(dimensions);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or, you could create a temporary variable, using a list initalizer to let the compiler deduce the type:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Box box_A({78.0, 24.0, 18.0});&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
