<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>text printed twice on the same page</Title>
<Body>&lt;p&gt;I have an issue with my generated pdf, the generated pdf file has 4 pages and I use an existing pdf with two pages. I have to write some text using &lt;code&gt;pyPD2&lt;/code&gt; and &lt;code&gt;reportlab&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;When I use&lt;code&gt;getPage()&lt;/code&gt; method I thought to make a page copy before merging, but for some reasons it uses the same page and I got my text printed several times.&lt;/p&gt;&lt;p&gt;How can I avoid that?&lt;/p&gt;&lt;p&gt;&lt;strong&gt;My code&lt;/strong&gt;:  &lt;/p&gt;&lt;pre&gt;&lt;code&gt;packet = io.BytesIO()can = canvas.Canvas(packet)can.drawString(0,0, &quot;Print on page 1&quot;)can.showPage()can.drawString(200,200, &quot;Print on page 2&quot;)can.showPage()can.drawString(0,0, &quot;Print on page 3&quot;)can.showPage()can.drawString(200,200, &quot;Print on page 4&quot;)can.save()new_pdf = PdfFileReader(packet)path_of_two_page_pdf = &#x27;overview.pdf&#x27;existing_pdf = PdfFileReader(file(path_of_two_page_pdf, &quot;rb&quot;))output = PdfFileWriter()for pi in range(4):    page = existing_pdf.getPage(pi % 2)    page.mergePage(new_pdf.getPage(pi))    output.addPage(page)outputStream = file(&quot;NEW_PDF.pdf&quot;, &quot;wb&quot;)output.write(outputStream)outputStream.close()&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,python-2.7,reportlab,pypdf2</Tags>
</question>
<answer>
<Body>&lt;p&gt;The problem is that &lt;code&gt;getPage()&lt;/code&gt; actually return the pointer to the page instead of a completely new page. So when &lt;code&gt;mergePage()&lt;/code&gt; is applied it merge it into the existing pdf. &lt;/p&gt;&lt;p&gt;The easiest workaround is to first create a blank page and use that to merge the other pages onto, that will look like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for pi in range(2*2):    # By doing this we will always create a blank page with the same size as the last page of the existing_pdf    new_page = PageObject.createBlankPage(pdf=existing_pdf)    # Merge the pages onto the blank page    new_page.mergePage(existing_pdf.getPage(pi % 2))    new_page.mergePage(new_pdf.getPage(pi))    # Add the new page to the output    output.addPage(new_page)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;One note, instead of creating a completely separate blank page using &lt;code&gt;createBlankPage&lt;/code&gt; you could also use &lt;code&gt;output.addBlankPage&lt;/code&gt; but this requires setting the page size manually which might not be ideal. Therefor the &lt;code&gt;pdf&lt;/code&gt; keyword of &lt;code&gt;createBlankPage&lt;/code&gt; is used, this sets the page size to the last page of the supplied pdf.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;As @B8vrede mensioned above &lt;code&gt;addBlankPage&lt;/code&gt; can be used, so instead of creating a separate blank page I called  &lt;code&gt;addBlankPage&lt;/code&gt; (which returns a reference to the new created page) specifying the &lt;code&gt;A4&lt;/code&gt; size.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from reportlab.lib.pagesizes import A4for pi in range(4):    new_page = output.addBlankPage(*A4)    new_page.mergePage(existing_pdf.getPage(pi % 2))    new_page.mergePage(new_pdf.getPage(pi))&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
