<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>CryptoLocker - restore Drive file version with Python script</Title>
<Body>&lt;p&gt;Long story short, I got infected by the CryptoLocker Virus. My “normal” local files are not the problem because these files I backup. But I was using the Google Drive Sync client and all my Drive files got encrypted. I didn’t back them up because I thought Google Drive is save and my data is stored all over the world (my fault I know).&lt;/p&gt;&lt;p&gt;Now I can see that Google Drive provides versioning. This means my old uploads are still on the server. I can restore the previous version file by file but by several thousand files, good luck.I contacted the Google G Suite support team (I’m using Google G Suite for my business) and asked them if they can restore the latest version in one bulk action. The answer was “no you have to do it file by file”. Therefore I was checking the internet for scripts, tools etc.&lt;/p&gt;&lt;p&gt;I found a Python script “bitbucket.org/snippets/cyclick/EBbEG” which should allow me to restore the preview working version.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Install python &quot;python.org/ftp/python/2.7.12/python-2.7.12.msi&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Run &quot;CMD&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Download the pip modul &quot;bootstrap.pypa.io/get-pip.py&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Copy it to the &quot;Scripts&quot; folder.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Run the script via CMD &quot;python get-pip.py&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Turn on the Drive API and generate a OAuth client ID: developers.google.com/drive/v3/web/quickstart/python&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Downloaded the json file, placed it in the “.credentials” folder and renamed it to “client_secret.json”. (like mentioned in line 28)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Install Google library under CMD &quot;pip install --upgrade google-api-python-client&quot;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Afterwards I copied the script and saved it as “cleanup.py”.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-code&quot;&gt;&lt;pre class=&quot;snippet-code-html lang-html prettyprint-override&quot;&gt;&lt;code&gt;# This script removes the file revision created by the Zepto Ransomware and # renames the file back to what it was before infection.# This file CHANGES the drive. USE IT AT YOUR OWN RISK. I&#x27;M NOT RESPONSIBLE FOR ANY LOSE.# # Requirements : #  * Avoid encoding problem by setting the python encoding before running the script#   $ export PYTHONIOENCODING=utf8#  * Turn on the Drive API and generate a OAuth client ID : https://developers.google.com/drive/v3/web/quickstart/pythonfrom __future__ import print_functionimport httplib2import osimport jsonfrom apiclient import discoveryimport oauth2clientfrom oauth2client import clientfrom oauth2client import toolstry:    import argparse    flags = argparse.ArgumentParser(parents=[tools.argparser]).parse_args()except ImportError:    flags = None# If modifying these scopes, delete your previously saved credentials at ~/.credentials/drive-python-quickstart.jsonSCOPES = &#x27;https://www.googleapis.com/auth/drive&#x27;CLIENT_SECRET_FILE = &#x27;client_secret.json&#x27;APPLICATION_NAME = &#x27;Drive API Python Quickstart&#x27;def get_credentials():    &quot;&quot;&quot;    Gets valid user credentials from storage.    If nothing has been stored, or if the stored credentials are invalid,    the OAuth2 flow is completed to obtain the new credentials.    Returns:        Credentials, the obtained credential.    &quot;&quot;&quot;    home_dir = os.path.expanduser(&#x27;~&#x27;)    credential_dir = os.path.join(home_dir, &#x27;.credentials&#x27;)    if not os.path.exists(credential_dir):      os.makedirs(credential_dir)    credential_path = os.path.join(credential_dir, &#x27;drive-python-quickstart.json&#x27;)    store = oauth2client.file.Storage(credential_path)    credentials = store.get()    if not credentials or credentials.invalid:      flow = client.flow_from_clientsecrets(CLIENT_SECRET_FILE, SCOPES)      flow.user_agent = APPLICATION_NAME      if flags:        credentials = tools.run_flow(flow, store, flags)      else:         # Needed only for compatibility with Python 2.6        credentials = tools.run(flow, store)      print(&#x27;Storing credentials to &#x27; + credential_path)    return credentialsdef deleteFilesWithSuffix(suffix, service):  results = service.files().list(      corpus=&quot;domain&quot;,      spaces=&quot;drive&quot;,      pageSize=1000,      orderBy=&quot;folder,modifiedTime desc,name&quot;,      q=&quot;name contains &#x27;&quot; + suffix + &quot;&#x27;&quot;,      fields=&quot;nextPageToken, files(id, name)&quot;           ).execute()  items = results.get(&#x27;files&#x27;, [])  if not items:    print(&#x27;No files found.&#x27;)  else:    for item in items:      if item[&#x27;name&#x27;].endswith(suffix):        try:          deleteFile = service.files().delete(fileId=item[&#x27;id&#x27;]).execute()          print(&quot;Deleted file : &quot; + item[&#x27;name&#x27;])        except Exception as e:          print(&quot;Could not delete file : &quot; + item[&#x27;name&#x27;] + &quot;. Details : &quot; + str(e))def renameFile(fileId, originalFilename, service):  try:    print(&quot;Renaming file &quot; + fileId + &quot; to &quot; + originalFilename)    service.files().update(fileId=fileId, body={&#x27;name&#x27;: originalFilename}, fields=&#x27;name&#x27;).execute()  except Exception as e:    print(&quot;Could not rename file &quot; + fileId + &quot; / Details : &quot; + str(e))def revertFiles(suffix, service):  results = service.files().list(      corpus=&quot;domain&quot;,      spaces=&quot;drive&quot;,      pageSize=1000,      orderBy=&quot;folder,modifiedTime desc,name&quot;,      #q=&quot;modifiedTime &amp;gt; &#x27;2016-09-04T12:00:00&#x27;&quot;,      q= &quot;name contains &#x27;&quot; + suffix + &quot;&#x27;&quot;,      fields=&quot;nextPageToken, files(id, name)&quot;         ).execute()  items = results.get(&#x27;files&#x27;, [])  if not items:    print(&#x27;No files found.&#x27;)  else:      for item in items:        details = service.files().get(fileId=item[&#x27;id&#x27;], fields=&quot;lastModifyingUser,name&quot;).execute()        if details[&#x27;name&#x27;].endswith(suffix):            print(&quot;About to handle file &quot; + details[&#x27;name&#x27;] + &quot; having id &quot; + item[&#x27;id&#x27;])            revs = service.revisions().list(fileId=item[&#x27;id&#x27;], fields=&quot;kind,revisions&quot;).execute()            allrev = revs[&#x27;revisions&#x27;]            lastRev = allrev[-1]            if not lastRev[&#x27;originalFilename&#x27;].endswith(suffix):              # there was a rename problem during previous run -&amp;gt; fix it               originalFilename = lastRev[&#x27;originalFilename&#x27;]              renameFile(item[&#x27;id&#x27;], originalFilename, service)            elif len(allrev) &amp;gt; 1:                origRev = allrev[-2]                if lastRev[&#x27;originalFilename&#x27;].endswith(suffix):                  try:                    print(&quot;Removing last revision of file &quot; + details[&#x27;name&#x27;])                     revDel = service.revisions().delete(fileId=item[&#x27;id&#x27;], revisionId=lastRev[&#x27;id&#x27;]).execute()                    originalFilename = origRev[&#x27;originalFilename&#x27;]                    renameFile(item[&#x27;id&#x27;], originalFilename, service)                  except Exception as e:                    print(&quot;Could not process file : &quot; + details[&#x27;name&#x27;] + &quot; / Details : &quot; + str(e))def main():    credentials = get_credentials()    http = credentials.authorize(httplib2.Http())    service = discovery.build(&#x27;drive&#x27;, &#x27;v3&#x27;, http=http)    deleteFilesWithSuffix(&#x27;_HELP_instructions.html&#x27;, service)    revertFiles(&#x27;zepto&#x27;, service)if __name__ == &#x27;__main__&#x27;:    main()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;&lt;ol start=&quot;10&quot;&gt;&lt;li&gt;I ran the script via CMD “python cleanup.py”.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;I receive an error message:&lt;/p&gt;&lt;p&gt;&lt;div class=&quot;snippet&quot; data-lang=&quot;js&quot; data-hide=&quot;false&quot; data-console=&quot;true&quot; data-babel=&quot;false&quot;&gt;&lt;div class=&quot;snippet-code&quot;&gt;&lt;pre class=&quot;snippet-code-html lang-html prettyprint-override&quot;&gt;&lt;code&gt;C:\Python27\Scripts&amp;gt;python cleanup.pyTraceback (most recent call last):  File &quot;cleanup.py&quot;, line 133, in &amp;lt;module&amp;gt;    main()  File &quot;cleanup.py&quot;, line 125, in main    credentials = get_credentials()  File &quot;cleanup.py&quot;, line 48, in get_credentials    credentials = store.get()  File &quot;C:\Python27\lib\site-packages\oauth2client\client.py&quot;, line 407, in get    return self.locked_get()  File &quot;C:\Python27\lib\site-packages\oauth2client\file.py&quot;, line 54, in locked_get    credentials = client.Credentials.new_from_json(content)  File &quot;C:\Python27\lib\site-packages\oauth2client\client.py&quot;, line 302, in new_from_json    module_name = data[&#x27;_module&#x27;]KeyError: &#x27;_module&#x27;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;What did I do wrong? Is it possible that there is something wrong with the credentials/jason file?&lt;/p&gt;&lt;p&gt;Now I’m here guys and asking you for help. Maybe we can get this script running so that I can restore the latest working version of my files.&lt;/p&gt;&lt;p&gt;I really appreciate any help you can provide.&lt;/p&gt;</Body>
<Tags>python,google-apps-script,google-drive-api,virus</Tags>
</question>
<answer>
<Body>&lt;p&gt;Take a look at this page? &lt;a href=&quot;http://Https://github.com/hut6/google-drive-restore&quot; rel=&quot;nofollow noreferrer&quot;&gt;Https://github.com/hut6/google-drive-restore&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Did you check out step 1.?&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;You must add the Google Admin SDK and Google Drive APIs to a client in  the Google Developers Console. Download the JSON credentials file, and  add it to the root directory as credentials.json.&lt;/p&gt;&lt;/blockquote&gt;</Body>
</answer>
</qroot>
