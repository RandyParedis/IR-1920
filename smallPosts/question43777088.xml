<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How to use the creating class` methods from the created class?</Title>
<Body>&lt;p&gt;I have a question:&lt;/p&gt;&lt;p&gt;I have a class &lt;strong&gt;userinterface&lt;/strong&gt; that &lt;em&gt;has&lt;/em&gt; a class &lt;strong&gt;MoveSeries&lt;/strong&gt;. From MoveSeries I want to have access to the methods of my class userinterface. In this example I want to have access to the method get_MoveCurve_Delta() of userinterface. &lt;strong&gt;How do I get access to the creating class (userinterface) from the created class (MoveSeries ?&lt;/strong&gt; I tried the Signal-Slot-Approach but since I have to use several methods of userinterface several times this makes lots of signal-slots...&lt;/p&gt;&lt;p&gt;here is my code:&lt;/p&gt;&lt;p&gt;Userinterface.h:&lt;/p&gt;&lt;pre&gt;&lt;code&gt; class UserInterface : public QMainWindow {     Q_OBJECT public:     UserInterface(QWidget *parent = 0, Qt::WFlags flags = 0);     ~UserInterface();     ... private:     double MoveCurve_Delta;     MoveSeries *MOVE_SERIES  ; public:     void set_MoveCurve_Delta( double val)     { MoveCurve_Delta  = val;}     double get_MoveCurve_Delta()      { return MoveCurve_Delta  ;} }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Userinterface.cpp:&lt;/p&gt;&lt;pre&gt;&lt;code&gt; UserInterface::UserInterface(QWidget *parent, Qt::WFlags flags) :           QMainWindow(parent, flags) {     ui.setupUi(this);     ...     MOVE_SERIES = new MoveSeries( this); }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MoveSeries.h:    &lt;/p&gt;&lt;pre&gt;&lt;code&gt;  class MoveSeries : public QDialog  {     Q_OBJECT public:     explicit MoveSeries(QWidget *parent = 0);     ~MoveSeries();     ...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MoveSeries.cpp:&lt;/p&gt;&lt;pre&gt;&lt;code&gt; MoveSeries::MoveSeries(QWidget *parent) : QDialog(parent),ui(new Ui::MoveSeries) {     ui-&amp;gt;setupUi(this);     this-&amp;gt;parent = parent;         parent-&amp;gt;set-MoveSeries_Delta_Val(); }&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>c++,qt,methods,usability</Tags>
</question>
<answer>
<Body>&lt;p&gt;It looks like you want to cast the parent to the class you want:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;static_cast&amp;lt;UserInterface *&amp;gt;(parent)-&amp;gt;get_MoveCurve_Delta();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Bear in mind that this could be dangerous as it makes an assumption about the type of the parent.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Rather than assume that the parent QWidget in MoveSeries is UserInterface, you can also &lt;em&gt;require&lt;/em&gt; that it is.&lt;/p&gt;&lt;p&gt;MoveSeries.h:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  class UserInterface; // only need a forward declaration  class MoveSeries : public QDialog  {     Q_OBJECT public:     explicit MoveSeries(UserInterface *parent = 0);     ~MoveSeries();     ...     UserInterface * uiparent; }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MoveSeries.cpp:&lt;/p&gt;&lt;pre&gt;&lt;code&gt; #include &quot;Userinterface.h&quot; // include the header where it is required MoveSeries::MoveSeries(UserInterface *parent) : QDialog(parent), ui(new Ui::MoveSeries), uiparent(parent) {     ui-&amp;gt;setupUi(this);     uiparent-&amp;gt;set-MoveSeries_Delta_Val(); }&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;If you want only &lt;code&gt;UserInterface&lt;/code&gt; be the parent of &lt;code&gt;MoveSeries&lt;/code&gt;, say so:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  explicit MoveSeries(UserInterface *parent = 0);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you want &lt;em&gt;any&lt;/em&gt; widget to be able to act as the parent, you cannot access &lt;code&gt;UserInterface&lt;/code&gt; methods because the parent does not necessarily have them.&lt;/p&gt;</Body>
</answer>
</qroot>
