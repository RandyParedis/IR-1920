<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Call a function reference to a templated base class function</Title>
<Body>&lt;p&gt;I am struggling to understand why I cannot call a reference to a base class function. If you guys have some ideas please share them with me. More explanations in the code. This is just a representation of what I am trying to do since I am using boost and the code is way too long.&lt;/p&gt;&lt;p&gt;Live sample in rextester: &lt;a href=&quot;http://rextester.com/live/QRJHPL54630&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://rextester.com/live/QRJHPL54630&lt;/a&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;//g++  5.4.0#include &amp;lt;iostream&amp;gt;//have a base class which calls a function from the derived templatetemplate&amp;lt;typename Derived&amp;gt;struct Base{    template&amp;lt;void (Derived::*action)(void)&amp;gt;    void callMethod(Derived&amp;amp; d)    {        (d.*action)();    }};struct Evt{    void evt_doSmth(){ std::cout &amp;lt;&amp;lt; &quot;finally&quot; &amp;lt;&amp;lt; std::endl; };    };struct Foo : public Base&amp;lt;Foo&amp;gt;, public Evt{    void foo_doSmth(){ std::cout &amp;lt;&amp;lt; &quot;i expected this&quot; &amp;lt;&amp;lt; std::endl; };    };int main(){    Foo f;    //this works because the function in declared in the Foo class    f.callMethod&amp;lt;&amp;amp;Foo::foo_doSmth&amp;gt;(f);    f.foo_doSmth();    //i don&#x27;t understand why this is not working, because the function    //should be accessible from the Foo class since it inherits Evt class    //could not convert template argument.    f.callMethod&amp;lt;&amp;amp;Foo::evt_doSmth&amp;gt;(f);//&amp;lt;------- this does not work.    f.evt_doSmth(); // works obviously}&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>c++,templates,inheritance,reference,callback</Tags>
</question>
</qroot>
