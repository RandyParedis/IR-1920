<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Simultaneous use of a checkbutton and a button</Title>
<Body>&lt;p&gt;I am new to Python and obviously missing something important when working with checkbuttons. Here&#x27;s the idea behind my program: I select a file manually and then, depending on whether the checkbox is checked or not, trigger either one calculation sequence or another using a button. To achieve this, I wanted to verify the state of the checkbox using the .get() command.&lt;/p&gt;&lt;p&gt;What I&#x27;ve found is that only one sequence is triggered all the time independently of the state of the checkbox. .get() is not updated when I click on the checkbox. What am I doing wrong? Any help will be greatly appreciated.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from tkinter import *from tkinter import filedialogimport tkinter as tkmaster = Tk()root = tk.Tk()col_sep = &quot;\t&quot;col_h_b = []  # field column for backgroundcol_m_b = []  # magnetization column for backgrounddef choose_b_file():    root.fileName_b = filedialog.askopenfilename(filetypes=((&quot;.dat files&quot;, &quot;*.dat&quot;), (&quot;All files&quot;, &quot;*.*&quot;)))    with open(root.fileName_b, &#x27;r&#x27;) as f:         for line in f:            if line[0] != &quot;#&quot;:                linedata = [float(line.split(col_sep)[i]) for i in range(len(line.split(col_sep)))]                col_h_b.append(linedata[4])                col_m_b.append(linedata[5])    print(f.name)offset = BooleanVar()checkbox = tk.Checkbutton(root, text=&quot;offset subtraction&quot;, variable=offset,onvalue=1, offvalue=0)checkbox.pack()def plot():    if offset.get() == 1:        #some mathematical operations and graph plotting    else:        #other mathematical operations and graph plottingdef close_window():    exit()b_data = Button(master, text=&quot;Background&quot;, width=20, command=choose_b_file)m_minus_b = Button(master, text=&quot;Plot&quot;, width=5, command=plot)quit = Button(master, text=&quot;Quit&quot;, width=5, command=close_window)b_data.pack()m_minus_b.pack()quit.pack()root.mainloop()&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,checkbox,tkinter</Tags>
</question>
<answer>
<Body>&lt;p&gt;You are mostly messing parents widgets &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;master&lt;/code&gt;.Do you need to have a separate window for the checkbox ?&lt;/p&gt;&lt;p&gt;Otherwise the quick fix is to replace &lt;code&gt;root&lt;/code&gt; by &lt;code&gt;master&lt;/code&gt; in the checkbox creation :&lt;/p&gt;&lt;pre&gt;&lt;code&gt;checkbox = tk.Checkbutton(root, text=&quot;offset subtraction&quot; ...)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can also simplify the boolean stuff, the default behavior for the checkbutton is to use 0 and 1, and remove the master or the root, choose only one.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from tkinter import *from tkinter import filedialogroot = Tk()col_sep = &quot;\t&quot;    col_h_b = []  # field column for backgroundcol_m_b = []  # magnetization column for backgrounddef choose_b_file():    root.fileName_b = filedialog.askopenfilename(filetypes=((&quot;.dat files&quot;, &quot;*.dat&quot;), (&quot;All files&quot;, &quot;*.*&quot;)))    with open(root.fileName_b, &#x27;r&#x27;) as f:         for line in f:            if line[0] != &quot;#&quot;:                linedata = [float(line.split(col_sep)[i]) for i in range(len(line.split(col_sep)))]                col_h_b.append(linedata[4])                col_m_b.append(linedata[5])    print(f.name)def plot():    if offset.get() == 1:        print(&#x27;True&#x27;)        #some mathematical operations and graph plotting    else:        print(&#x27;False&#x27;)        #other mathematical operations and graph plottingdef close_window():    exit()offset = IntVar()checkbox = Checkbutton(root, text=&quot;offset subtraction&quot;, variable=offset)checkbox.pack()b_data = Button(root, text=&quot;Background&quot;, width=20, command=choose_b_file)m_minus_b = Button(root, text=&quot;Plot&quot;, width=5, command=plot)quit = Button(root, text=&quot;Quit&quot;, width=5, command=close_window)b_data.pack()m_minus_b.pack()quit.pack()root.mainloop()&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
