<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Mock a Remote Host in Python</Title>
<Body>&lt;p&gt;I am writing some functions, using paramiko, to execute commands and create files on a remote host. I would like to write some unit tests for them, but I don&#x27;t know what would be the simplest way to achieve this? This is what I envisage as being an example outline of my code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import osimport paramikoimport pytestdef my_function(hostname, relpath=&#x27;.&#x27;, **kwargs):    ssh = paramiko.SSHClient()    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())    ssh.connect(hostname, **kwargs)    sftp = ssh.open_sftp()    sftp.chdir(relpath)    stdin, stdout, stderr = ssh.exec_command(&quot;echo hallo &amp;gt; test.txt&quot;)@pytest.fixture(&quot;module&quot;)def mock_remote_host():    # start a remote host here with a local test path    try:        yield hostname, testpath, {&quot;username&quot;:&quot;bob&quot;, &quot;password&quot;:&quot;1234&quot;}    finally:        # delete the test path        # close the remote hostdef test_my_function(mock_remote_host):    hostname, dirpath, kwargs = mock_remote_host    my_function(hostname, **kwargs)    filepath = os.path.join(dirpath, &#x27;test.txt&#x27;)    assert os.path.exists(filepath)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I have had a look at the &lt;a href=&quot;https://github.com/paramiko/paramiko/blob/master/tests/test_client.py&quot; rel=&quot;nofollow noreferrer&quot;&gt;paramiko test modules&lt;/a&gt;, but they seem quite complex for my use case and I&#x27;m not sure how to go about simplifying them.&lt;/p&gt;</Body>
<Tags>python,unit-testing,mocking,paramiko,remote-server</Tags>
</question>
<answer>
<Body>&lt;p&gt;I think what you really need to mock is &lt;code&gt;paramiko.SSHClient&lt;/code&gt;object. You are unittesting your function &lt;code&gt;my_function&lt;/code&gt;, you can assume &lt;code&gt;paramiko&lt;/code&gt; module works correctly and the only thing you need to unit test is if &lt;code&gt;my_function&lt;/code&gt; calls methods of this &lt;code&gt;paramiko.SSHClient&lt;/code&gt; in correct way. &lt;/p&gt;&lt;p&gt;To mock &lt;code&gt;paramiko.SSH&lt;/code&gt; module you can use &lt;a href=&quot;https://docs.python.org/3.3/library/unittest.mock.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;unittest.mock&lt;/a&gt; and decorate your &lt;code&gt;test_my_function&lt;/code&gt; function with &lt;code&gt;@mock.patch.object(paramiko.SSHClient, sshclientmock)&lt;/code&gt;. You have to define &lt;code&gt;sshclientmock&lt;/code&gt; as some kind of &lt;code&gt;Mock&lt;/code&gt; or &lt;code&gt;MagicMock&lt;/code&gt; first. &lt;/p&gt;&lt;p&gt;Also in python 2.7 there is some equivalent of &lt;code&gt;unittest.mock&lt;/code&gt; but I dont remember where to find it exactly.&lt;/p&gt;&lt;p&gt;EDIT: As @chepner mentioned in comment. For python 2.7 you can find &lt;code&gt;mock&lt;/code&gt; module in &lt;a href=&quot;https://pypi.python.org/pypi/mock/2.0.0&quot; rel=&quot;nofollow noreferrer&quot;&gt;pypi&lt;/a&gt; and install it using &lt;code&gt;pip install mock&lt;/code&gt;&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;If you want to test remote connectivity, remote filesystem structure and remote path navigation you have to set-up a mock host server (a VM maybe). In other words if you want to test &lt;em&gt;your actions on the host&lt;/em&gt; you have to mock the host.&lt;/p&gt;&lt;p&gt;If you want to test &lt;em&gt;your actions with the data of the host&lt;/em&gt; the easiest way seems to proceed as running.t said in the other answer.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;To answer my own question, I have created: &lt;a href=&quot;https://github.com/chrisjsewell/atomic-hpc/tree/master/atomic_hpc/mockssh&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/chrisjsewell/atomic-hpc/tree/master/atomic_hpc/mockssh&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;As the readme discusses; it is based on &lt;a href=&quot;https://github.com/carletes/mock-ssh-server/tree/master/mockssh&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/carletes/mock-ssh-server/tree/master/mockssh&lt;/a&gt; with additions made (to implement more sftp functions) based on &lt;a href=&quot;https://github.com/rspivak/sftpserver&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://github.com/rspivak/sftpserver&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The following changes have also been made:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;revised &lt;code&gt;users&lt;/code&gt; parameter, such that either a private_path_key or password can be used&lt;/li&gt;&lt;li&gt;added a &lt;code&gt;dirname&lt;/code&gt; parameter to the &lt;code&gt;Server&lt;/code&gt; context manager, such that the this will be set as the root path for the duration of the context.&lt;/li&gt;&lt;li&gt;patched &lt;code&gt;paramiko.sftp_client.SFTPClient.chdir&lt;/code&gt; to fix its use with relative paths.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;See test_mockssh.py for example uses.&lt;/p&gt;</Body>
</answer>
</qroot>
