<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Compare elements of one nested list with another nested list</Title>
<Body>&lt;p&gt;I got two list of lists&lt;/p&gt;&lt;pre&gt;&lt;code&gt;l1 = [[1,2,3],[4,5,6],[7,8,9]]l2 = [[&#x27;a&#x27;,&#x27;b&#x27;,4],[&#x27;c&#x27;,&#x27;d&#x27;,1],[&#x27;e&#x27;,&#x27;f&#x27;,12],[&#x27;i&#x27;,&#x27;j&#x27;,18]]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I would like to iterate over &lt;code&gt;l1&lt;/code&gt; and check if &lt;code&gt;l1[0]&lt;/code&gt; matches with &lt;em&gt;any&lt;/em&gt; &lt;code&gt;l2[2]&lt;/code&gt;, In this case the output should be &lt;code&gt;[1, l1[0],l2[0]]&lt;/code&gt; otherwise output is &lt;code&gt;[0, l1[0], l2[0]]&lt;/code&gt;. Output should be a single nested list(or list of tuples) with result for each element of &lt;code&gt;l1&lt;/code&gt;. Both lists can have different sizes.&lt;/p&gt;&lt;p&gt;I tried solving this with for-loop like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;output = list()for i in l1:   matched = 0   for j in l2:       if j[2] == i[0]:          output.append([1,i[0], j[0]])          matched = 1    if matched == 0:       output.append([0,i[0]])&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This give correct output&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[[1, 1, &#x27;c&#x27;], [1, 4, &#x27;a&#x27;], [0, 7]]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However I am looking for a more compact solution. Is it possible to solve this with list comprehension of something similar which can reduce number of lines involved?&lt;/p&gt;&lt;p&gt;I tried a nested list comprehension but couldn&#x27;t make it work&lt;/p&gt;&lt;pre&gt;&lt;code&gt;out = [[(1,i[0],k[0]) if(k[2] == i[0]) else (0,i[0],k[0]) for k in l2] for i in l1]print(out)[[(0, 1, &#x27;a&#x27;), (1, 1, &#x27;c&#x27;), (0, 1, &#x27;e&#x27;), (0, 1, &#x27;i&#x27;)], [(1, 4, &#x27;a&#x27;), (0, 4, &#x27;c&#x27;), (0, 4, &#x27;e&#x27;), (0, 4, &#x27;i&#x27;)], [(0, 7, &#x27;a&#x27;), (0, 7, &#x27;c&#x27;), (0, 7, &#x27;e&#x27;), (0, 7, &#x27;i&#x27;)]]&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,list</Tags>
</question>
<answer>
<Body>&lt;p&gt;it seems that you&#x27;re not using all your elements. However, I&#x27;d build a dict out of &lt;code&gt;l2&lt;/code&gt; for quick lookup &amp;amp; concision (one-liner would be probably possible, but at the expense of readability &amp;amp; performance)&lt;/p&gt;&lt;p&gt;I&#x27;d make that follow with a list comprehension including a ternary to issue 2 or 3 elements depending if the item is found (so no need for a fancy &lt;code&gt;int(if a in l2d)&lt;/code&gt; since we can issue 0 or 1 directly). Like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;l1 = [[1,2,3],[4,5,6],[7,8,9]]l2 = [[&#x27;a&#x27;,&#x27;b&#x27;,4],[&#x27;c&#x27;,&#x27;d&#x27;,1],[&#x27;e&#x27;,&#x27;f&#x27;,12],[&#x27;i&#x27;,&#x27;j&#x27;,18]]l2d = {v[2]:v[0] for v in l2}  # not using v[1]result = [[1,a,l2d[a]] if a in l2d else [0,a] for a,_,_ in l1]  # using only first element of each l1 triplet...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;result:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[[1, 1, &#x27;c&#x27;], [1, 4, &#x27;a&#x27;], [0, 7]]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(note that carrying other unused items isn&#x27;t really helping to understand the issue)&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Better build a dictionary to speed up com.stackoverflow.searching.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;d = {
    c: a for [a,b,c] in l2 }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now you can use this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[[int(a
    in d), a] + ([d[a]] if a in d else []) for a,b,c in l1]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This returns&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[[1,
    1, &#x27;c&#x27;], [1, 4, &#x27;a&#x27;], [0, 7]]&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
