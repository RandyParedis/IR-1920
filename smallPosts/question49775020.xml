<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How to run a django project without manage.py</Title>
<Body>&lt;p&gt;Basically I downloaded django project from SCM, Usually I run the project with with these steps&lt;/p&gt;&lt;ol&gt;&lt;li&gt;git clone repository&lt;/li&gt;&lt;li&gt;extract&lt;/li&gt;&lt;li&gt;change directory to project folder&lt;/li&gt;&lt;li&gt;python manage.py runserver &lt;/li&gt;&lt;/ol&gt;&lt;p&gt;But this project does not contains manage.py , how to run this project in my local machine???&lt;/p&gt;&lt;p&gt;br&lt;/p&gt;</Body>
<Tags>python,django</Tags>
</question>
<answer>
<Body>&lt;p&gt;You&#x27;ll have to create a manage.py file manually if you wanted to use its commands in the same way you&#x27;re accustomed to. You can modify django&#x27;s &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/project_template/manage.py-tpl&quot; rel=&quot;noreferrer&quot;&gt;manage.py template&lt;/a&gt; to include your project&#x27;s settings.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#!/usr/bin/env pythonimport osimport sysif __name__ == &#x27;__main__&#x27;:    os.environ.setdefault(&#x27;DJANGO_SETTINGS_MODULE&#x27;, &#x27;{{ project_name }}.settings&#x27;)    try:        from django.core.management import execute_from_command_line    except ImportError as exc:        raise ImportError(            &quot;Couldn&#x27;t import Django. Are you sure it&#x27;s installed and &quot;            &quot;available on your PYTHONPATH environment variable? Did you &quot;            &quot;forget to activate a virtual environment?&quot;        ) from exc    execute_from_command_line(sys.argv)&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;You can use uwsgi to run a django project.&lt;/p&gt;&lt;p&gt;First install uwsgi using:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip install uWSGI&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Go to project folder and enter this in terminal:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Replace server with whatever is your project nameuwsgi --http :8000 --module Server.wsgi&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Most likely, this is not supposed to be a complete project, but a plugin application. You should create your own project in the normal way with &lt;code&gt;django-admin.py startproject&lt;/code&gt; and add the downloaded app to INSTALLED_APPS.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;First create a virtual environment and install Django. Now you have &lt;code&gt;django-admin.py&lt;/code&gt; available in your system.&lt;br&gt;django-admin is Django’s command-line utility for administrative tasks.&lt;/p&gt;&lt;p&gt;&lt;code&gt;$ django-admin startproject name [directory]&lt;/code&gt; create a Django app directory structure for the given app name in the current directory or the given destination.&lt;br&gt;&lt;br&gt;You can provide the path to a directory with a custom app template file or a path to a compressed file (.tar.gz, .tar.bz2, .tgz, .tbz, .zip) containing the app template files.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ django-admin startproject --template=/Users/jezdez/Code/my_app_template myapp&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;Django will also accept URLs (http, https, ftp) to compressed archives with the app template files, downloading and extracting them on the fly.&lt;/p&gt;&lt;p&gt;For example, taking advantage of GitHub’s feature (or other SCM) to expose repositories as zip files, you can use a URL like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ django-admin startproject --template=https://github.com/githubuser/django-app-template/archive/master.zip myapp$ cd my_proj$ touch manage.py&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Put this content into manage.py like @Sayse said:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    #!/usr/bin/env pythonimport osimport sysif __name__ == &quot;__main__&quot;:    # CHANGED manage.py will use development settings by    # default. Change the DJANGO_SETTINGS_MODULE environment variable    # for using the environment specific settings file.    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;{{ project_name }}.settings.development&quot;)    from django.core.management import execute_from_command_lineexecute_from_command_line(sys.argv)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Install dependencies and run migrations.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ pip install -r requirements.txt$ python manage.py migrate$ python manage.py runserver&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hope I help!&lt;/p&gt;</Body>
</answer>
</qroot>
