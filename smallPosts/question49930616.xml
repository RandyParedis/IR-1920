<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How to store scikit-image contours in a Pandas DataFrame with a single vertex and a contour number per row</Title>
<Body>&lt;p&gt;I am using a modified version of &lt;a href=&quot;http://scikit-image.org/docs/dev/auto_examples/edges/plot_contours.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;this scikit-image demo&lt;/a&gt; to create contours from the edges resulting from watershed segmentation of an image. In this result, each level has one contour only, made of row-column index pairs.&lt;/p&gt;&lt;p&gt;It is easy to display contours as in the demo. But what I&#x27;d like to do is use the &lt;code&gt;enumerate&lt;/code&gt; loop to append each vertex of each contour to a Pandas DataFrame, separating the row and column index, and then add a level/contour index in a separate column. &lt;/p&gt;&lt;p&gt;To illustrate I will start with a small toy example where each contour has one index only. With this code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;np.random.seed(131)test = np.random.randint(50, size=5)n_list = []t_list = []for n, t in enumerate(test):    n_list.append(n)    t_list.append(t)contours_df = pd.DataFrame({&#x27;contour&#x27;: n_list, &#x27;contour&#x27;: t_list})contours_df &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I get this DataFrame:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/wkLrn.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/wkLrn.png&quot; alt=&quot;test&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;A more representative example would be something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;np.random.seed(131)test1 = np.random.randint(50, size=(5, 2,  2))n_list1 = []t_list1 = []for n1, t1 in enumerate(test1):    n_list1.append(n1)    t_list1.append(t1)contours_df1 = pd.DataFrame({&#x27;contour&#x27;: n_list1, &#x27;points&#x27;: t_list1})contours_df1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;which gives me this DataFrame:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/zTlJR.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/zTlJR.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I can export this to an Excel file using &lt;code&gt;XlsxWriter&lt;/code&gt;, like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# using XlsxWriter documentation examplewriter = pd.ExcelWriter(&#x27;contours_df1.xlsx&#x27;, engine=&#x27;xlsxwriter&#x27;)contours_df1.to_excel(writer, sheet_name=&#x27;Sheet1&#x27;)writer.save()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To get this:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/UEkgk.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/UEkgk.png&quot; alt=&quot;Excel 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;But what I would really like is to split the contours so as to get something like this as a final Excel output:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://i.stack.imgur.com/XHZlw.png&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;img src=&quot;https://i.stack.imgur.com/XHZlw.png&quot; alt=&quot;Excel 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;</Body>
<Tags>python,pandas,contour,scikit-image,enumerate</Tags>
</question>
<answer>
<Body>&lt;p&gt;You are almost at your goal, you just need to play around a bit:&lt;/p&gt;&lt;p&gt;The &lt;a href=&quot;https://docs.python.org/3/library/functions.html#enumerate&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;enumerate&lt;/code&gt;&lt;/a&gt; method works as intended. When we enumerate an iterable python object, we get a &lt;code&gt;1-1&lt;/code&gt; correlation between the object&#x27;s elements and a &quot;pointer&quot; which ranges from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;len(iterable_object)-1&lt;/code&gt;.&lt;br&gt;Have a look at this example from the documentations:&lt;/p&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; seasons = [&#x27;Spring&#x27;, &#x27;Summer&#x27;, &#x27;Fall&#x27;, &#x27;Winter&#x27;]&amp;gt;&amp;gt;&amp;gt; list(enumerate(seasons))[(0, &#x27;Spring&#x27;), (1, &#x27;Summer&#x27;), (2, &#x27;Fall&#x27;), (3, &#x27;Winter&#x27;)]&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;p&gt;Now one way to achieve what you are showing us here, would be to use the pointer generated from &lt;code&gt;enumerate&lt;/code&gt; 2 times and split the contents of each &lt;code&gt;test&lt;/code&gt; elements accordingly:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;np.random.seed(131)test1 = np.random.randint(50, size=(5, 2,  2))contour_lst = []row_lst = []column_lst = []for n, t_elem in enumerate(test1):    # First square coordinates for this contour.    contour_lst.append(n)    row_lst.append(t_elem[0][0])    column_lst.append(t_elem[0][1])    # Second square coordinates for this contour.    contour_lst.append(n)    row_lst.append(t_elem[1][0])    column_lst.append(t_elem[1][1])contours_df1 = pd.DataFrame({    &#x27;contour&#x27;: contour_lst,     &#x27;row&#x27;: row_lst,    &#x27;column&#x27;: column_lst,})&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;I would use pandas concatenation. For reasonably-sized data, it&#x27;s a matter of taste whether you build up a list per column (though you would need a second nested loop to allow for arbitrary-sized contours). For larger data, I think this method should be faster because it makes use of NumPy/pandas vectorization where possible.&lt;/p&gt;&lt;p&gt;Here&#x27;s an example:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import numpy as npimport pandas as pdcontours = [np.random.random((i, 2)            for i in np.random.randint(3, 10, size=5)]dataframes = []for contour_id, contour in enumerate(contours):    current_dataframe = pd.DataFrame(contour, columns=[&#x27;row&#x27;, &#x27;column&#x27;])    current_dataframe[&#x27;contour&#x27;] = contour_id    dataframes.append(current_dataframe)contours_data = pd.concat(dataframes)contours_data.to_excel(&#x27;filename.xlsx&#x27;, sheet_name=&#x27;Sheet1&#x27;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Side note: you don&#x27;t need to create an ExcelWriter if you are only writing a single sheet.&lt;/p&gt;</Body>
</answer>
</qroot>
