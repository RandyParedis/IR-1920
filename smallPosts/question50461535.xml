<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Read and analyse output data line by line</Title>
<Body>&lt;p&gt;I have a program that reads specific lines of a file like so&lt;/p&gt;&lt;pre&gt;&lt;code&gt;with open(&quot;FastQ_Test.txt&quot;, &quot;r&quot;) as infile:c = 1for line in infile:    if c == 4:       print(line)        c = 1    else:        c += 1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And then create a dictionary from the results like this, that outputs ASCII values less than a said number and its index&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for text in line:    char = ord(text)    print(char, end = &quot; &quot;)    num += 1    result[char] = set()    result[char].add(num)    row = list(result.keys())    for i in range(len(row)):        if row[i] &amp;lt; 80:           print(&#x27;[&#x27;, row[i], &#x27;:&#x27;, result[row[i]], &#x27;]&#x27;, end=&quot; &quot;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Don&#x27;t mind the indenting and all. What my problem is, is I would like to analyse the lines read from the first piece of code. line by line. What it does is, it analyses the first line perfectly but when it comes to the other lines, it reads from where the first line ends.&lt;/p&gt;&lt;p&gt;E.g. File&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    WDDDDFRWWW    +    RFFWEGDDEE    +    TTTDDDEEWW&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Desired output, after reading lines 1, 3 and 5&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    line 1 -&amp;gt; [87: {1, 8, 9, 10}, 68: {2, 3, 4, 5}, 70: {6}, 82: {7}]    line 2 -&amp;gt; [82: {1}, 70: {2, 3}, 87: {4}, 69: {5, 9, 10}, 71: {6}, 68: {7, 8}]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and so forth.&lt;/p&gt;</Body>
<Tags>python-3.x</Tags>
</question>
<answer>
<Body>&lt;p&gt;I don&#x27;t have a clue of what is your goal here but below is a simple script that should give you the desired output&lt;/p&gt;&lt;p&gt;I tried to change as little as possible but to introduce new ideas and technics as much as possible, hope this will help&lt;/p&gt;&lt;pre&gt;&lt;code&gt;with open(&quot;FastQ_Test.txt&quot;, &quot;r&quot;) as infile, open(&quot;output.txt&quot;, &#x27;w&#x27;) as outfile:    for line in infile:        if line.strip() == &#x27;+&#x27;:            continue        result = {}        for i, text in enumerate(line.strip()):            char = ord(text)            if char not in result.keys():                result[char] = set()            result[char].add(i + 1)        row = list(result.keys())        print_list = []        for i in result.keys():            print_list.append(&quot;{}: {}&quot;.format(i, result[i]))        # print(&quot;[{}]&quot;.format(&quot;, &quot;.join(print_list)))        outfile.write(&quot;[{}]\n&quot;.format(&quot;, &quot;.join(print_list)))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;output&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[87: {8, 1, 10, 9}, 68: {2, 3, 4, 5}, 70: {6}, 82: {7}, 10: {11}][82: {1}, 70: {2, 3}, 87: {4}, 69: {9, 10, 5}, 71: {6}, 68: {8, 7}, 10: {11}][84: {1, 2, 3}, 68: {4, 5, 6}, 69: {8, 7}, 87: {9, 10}]&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
