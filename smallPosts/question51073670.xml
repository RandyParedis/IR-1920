<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How to add any number of users to the same table in postgres?</Title>
<Body>&lt;p&gt;I am using postgres and django and I have a table defined below in postgres&lt;/p&gt;&lt;pre&gt;&lt;code&gt;       Column        |          Type          | Modifiers ---------------------+------------------------+----------- id                  | integer                |  context_name        | character varying(100) |  context_description | character varying(100) |  context_priority    | character varying(1)   |  users               | integer                | &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Below is the associated model in django&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Contexts(models.Model):    context_name = models.CharField(max_length=50)    context_description = models.TextField()    context_priority = models.CharField(max_length=1)    users = models.PositiveIntegerField(null=False)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I cannot run &lt;code&gt;makemigrations&lt;/code&gt; since I have some issues in the settings.So I create the table manually in postgres and define the associated model in django.&lt;/p&gt;&lt;p&gt;Now this table is basically a group &lt;code&gt;context_name&lt;/code&gt; which can have many users.So I receive a JSON request and add the user to the table.Below is the JSON&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{&quot;user&quot; : 5,&quot;action&quot; : &quot;add&quot;,&quot;context_name&quot;: &quot;network debug&quot;,&quot;context_description&quot; : &quot;Group for debugging network issues&quot;,&quot;context_priority&quot;: &quot;L&quot;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is the code that handles the operation&lt;/p&gt;&lt;pre&gt;&lt;code&gt;@csrf_exemptdef context_operation(request):    user_request = json.loads(request.body.decode(&#x27;utf-8&#x27;))    if request.method == &quot;POST&quot;:        try:            if user_request.get(&quot;action&quot;) == &quot;add&quot;:                conv = Contexts.objects.create(                    context_name=user_request.get(&quot;context_name&quot;),                    context_description=user_request.get(&quot;context_description&quot;),                    context_priority=user_request.get(&quot;context_priority&quot;),                    users=user_request.get(&quot;user&quot;)                )                #print(conv.users)        except Exception as e:            print(&quot;Context saving exception&quot;, e)            return HttpResponse(0)        return HttpResponse(1)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now when I run this code and a request comes in, I can save the user &lt;code&gt;5&lt;/code&gt; in the group &lt;code&gt;network debug&lt;/code&gt; successfully but if I receive the same request again but with a different user id &lt;code&gt;7&lt;/code&gt;, it creates the same group again and assigns user &lt;code&gt;7&lt;/code&gt;.So I have two same groups but different users.&lt;/p&gt;&lt;p&gt;How do I ensure as long as the the &lt;code&gt;context_name&lt;/code&gt; is same, I can add any number of users?&lt;/p&gt;</Body>
<Tags>django,python-3.x,postgresql</Tags>
</question>
<answer>
<Body>&lt;p&gt;You can have two different models as below.    &lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Contexts(models.Model):    context_name = models.CharField(max_length=50)    context_description = models.TextField()    context_priority = models.CharField(max_length=1)class ContextUsers(models.Model):    context = models.ForeignKey(&#x27;Contexts&#x27;, null=False)    user = models.PositiveIntegerField(null=False)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Whenever a new context is received, create one, else assign the existing context and make an entry to the ContextUser. So, for multiple users with the same contexts you will have tables as below:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Context id | context_name | context_description | context_priority  1 |  c1          | some descriptions   | a  2 |  c2          | some other descr.   | bContextUserscontext_id | user  1        | 1  1        | 2  1        | 3  2        | 1  2        | 4&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
