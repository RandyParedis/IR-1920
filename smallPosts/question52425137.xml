<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How to get r&#x27;\\\|&#x27; from a yaml file</Title>
<Body>&lt;p&gt;I am using a yaml file to store some config data, including some (many) regex strings that I don&#x27;t want to keep in code. Everything works except when I try to search for some incorrectly escaped pipe characters with &lt;code&gt;r&#x27;\\\|&#x27;&lt;/code&gt;. I tried quoted, unquoted and literal strings in yaml, nothing works. Yaml and Python string escape rules together seem to conspire to keep the number of backslashes in a string even. I open and load the file with&lt;/p&gt;&lt;pre&gt;&lt;code&gt;f=open(file_path, &#x27;r&#x27;, encoding=&#x27;utf_8&#x27;)python_dict = yaml.load(f)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&#x27;d like to reproduce&lt;/p&gt;&lt;pre&gt;&lt;code&gt;re.compile(&#x27;\\\|&#x27;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;using something like&lt;/p&gt;&lt;pre&gt;&lt;code&gt;re.compile(python_dict[&#x27;escaped-pipes&#x27;])&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Python 3.4 with PyYAML.&lt;/p&gt;</Body>
<Tags>python,regex,yaml,pyyaml</Tags>
</question>
<answer>
<Body>&lt;p&gt;In YAML, &lt;code&gt;\&lt;/code&gt; is a special character only in doubly-quoted strings. The Python string &lt;code&gt;r&#x27;\\\|&#x27;&lt;/code&gt; is a raw string, so it consists of three backslashes and a pipe. You have the following options to encode this in a YAML document:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;plain:  \\\|      # plain scalar. YAML does not process the backslashes.single: &#x27;\\\|&#x27;    # single quoted scalar. YAML also does not process the backslashes.double: &quot;\\\\\\|&quot; # double quoted scalar. YAML does process escape sequences here, so you                  # need to double the backslashes&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Single-quoted scalars are kind-of the YAML equivalent of Python&#x27;s raw strings.&lt;/p&gt;&lt;p&gt;You may have other characters in your regexes that may interfere with YAML&#x27;s syntax. You may want to use block scalars instead, which treat &lt;em&gt;all&lt;/em&gt; characters as content and are ended via indentation:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;block: |-  \\\|next block: |-  \\\|&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;|&lt;/code&gt; starts a &lt;em&gt;literal block scalar&lt;/em&gt;, &lt;code&gt;-&lt;/code&gt; causes the final linebreak (before the next item) to not be part of the scalar, which is what you want.&lt;/p&gt;</Body>
</answer>
</qroot>
