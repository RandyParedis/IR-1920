<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>pandas to_csv , number of unique record reduces</Title>
<Body>&lt;p&gt;I&#x27;m writing a pandas dataframe to a csv file. However I can find that number of unique ids are decreasing, but total number of rows remains the same&lt;/p&gt;&lt;p&gt;Below you can find the code:&lt;/p&gt;&lt;p&gt;checking total count and unique count of grouped_test&lt;/p&gt;&lt;pre&gt;&lt;code&gt; grouped_test[&#x27;fullVisitorId&#x27;].nunique() , grouped_test[&#x27;fullVisitorId&#x27;].count() (639230, 639230)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Submitting to a csv file&lt;/p&gt;&lt;pre&gt;&lt;code&gt;grouped_test.to_csv(&#x27;result.csv&#x27;,index=False)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Reading the same csv file again&lt;/p&gt;&lt;pre&gt;&lt;code&gt;result = pd.read_csv(&#x27;result.csv&#x27;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I got below warning when reading the file&lt;/p&gt;&lt;pre&gt;&lt;code&gt;py:2785: DtypeWarning: Columns (0) have mixed types. Specify dtype option on import or set low_memory=False.  interactivity=interactivity, compiler=compiler, result=result)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;checking the count&lt;/p&gt;&lt;pre&gt;&lt;code&gt;result[&#x27;fullVisitorId&#x27;].nunique() , result[&#x27;fullVisitorId&#x27;].count()(638932, 639230)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can find the number of unique id decreases, any idea what could be the issue.&lt;/p&gt;&lt;p&gt;Below you can find some sample values of Ids. Does the length/datatype of the id has anything to do with it?&lt;/p&gt;&lt;pre&gt;&lt;code&gt;9844437513179813866643697640977915618&lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>python,python-3.x,pandas</Tags>
</question>
<answer>
<Body>&lt;p&gt;One way to rule out any data type issues would be by enforcing the datatype as integer (before saving to csv as well as immediately reading from the csv.&lt;/p&gt;&lt;p&gt;Upon reading:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;result = pd.read_csv(&#x27;result.csv&#x27;)result[&#x27;fullVisitorId&#x27;] = result[&#x27;fullVisitorId&#x27;].astype(int)result[&#x27;fullVisitorId&#x27;].nunique() , result[&#x27;fullVisitorId&#x27;].count()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There is also in infer_objects() which you may want to explore&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;To start with, your guess that length of integers matters is right.&lt;/p&gt;&lt;p&gt;Let&#x27;s do some experiments with data to prove that.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Experiment 1&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Let&#x27;s see what is the biggest integer Pandas can handle:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;df = pd.DataFrame({&quot;a&quot;:[9223372036854775899]})df.to_csv(&quot;try.csv&quot;, index=False)df1 = pd.read_csv(&quot;try.csv&quot;, dtype={&quot;a&quot;:int})df1a0   9223372036854775899df = pd.DataFrame({&quot;a&quot;:[92233720368547758100]})df.to_csv(&quot;try.csv&quot;, index=False)df2 = pd.read_csv(&quot;try.csv&quot;, dtype={&quot;a&quot;:int})df2---------------------------------------------------------------------------OverflowError                             Traceback (most recent call last)pandas/_libs/parsers.pyx in pandas._libs.parsers.TextReader._convert_with_dtype()pandas/_libs/parsers.pyx in pandas._libs.parsers._try_int64()OverflowError: Overflow&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, the question now how should we &lt;em&gt;properly&lt;/em&gt; specify format of the numbers&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Experiment 2&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;df = pd.DataFrame({&quot;a&quot;:[98444375131798787989138668, 98444375131798787989138669]})df.to_csv(&quot;try.csv&quot;, index=False)df3 = pd.read_csv(&quot;try.csv&quot;, dtype={&quot;a&quot;:float})df3.a.nunique()1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We see that &lt;code&gt;float&lt;/code&gt; is &lt;em&gt;eating&lt;/em&gt; numbers&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Experiment 3&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Let&#x27;s try &lt;code&gt;object&lt;/code&gt; format&lt;/p&gt;&lt;pre&gt;&lt;code&gt;df = pd.DataFrame({&quot;a&quot;:[98444375131798787989138668, 98444375131798787989138669]})df.to_csv(&quot;try.csv&quot;, index=False)df4 = pd.read_csv(&quot;try.csv&quot;, dtype={&quot;a&quot;:object})df4.a.nunique()2&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In short, the answer to your question is to specify the data type on reading as &lt;code&gt;object&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;df = pd.read_csv(&quot;result.csv&quot;, dtype={&quot;fullVisitorId&quot;:object})&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
