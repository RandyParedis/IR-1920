<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Parsing a text file in c++ and storing strings in separate variables</Title>
<Body>&lt;p&gt;I have a text file that will be something like this. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;lastname firstname, id&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I want to go through the text file and add each record into a single vector that has 3 variables: &lt;code&gt;lastname, firstname, id&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Here is the code I&#x27;m using, but for some reason I don&#x27;t get the output I want.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;int Student::readStudents(vector&amp;lt;Student&amp;gt; &amp;amp;term){  ifstream infile(&quot;spring2011.txt&quot;);   if ( !infile ) {    cout &amp;lt;&amp;lt; &quot;Error attempting to open file ... &quot;         &amp;lt;&amp;lt; &quot;(Perhaps it dosen&#x27;t exist yet?)&quot; &amp;lt;&amp;lt; endl;    return -1;          // report error condition ...  }  term.clear(); // empty the student vector  string lname,fname, id;  int j;  while(infile){    getline( infile, lname, &#x27; &#x27;);    getline(infile,fname, &#x27;,&#x27;);    getline(infile, id, &#x27; &#x27;);     term.push_back( Student(lname, fname, id) ); // construct and add new Student    j++; }  infile.close();  return j; //count of records}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is the function I&#x27;m using to display the records in the vector.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;void Student::showStudents(vector&amp;lt;Student&amp;gt; &amp;amp;term){   for( size_t i=0; i&amp;lt; term.size(); ++i ){          cout &amp;lt;&amp;lt; i+1 &amp;lt;&amp;lt; &quot;.\n&quot;               &amp;lt;&amp;lt; &quot;Name   : &quot; &amp;lt;&amp;lt; term[i].getLastName()&amp;lt;&amp;lt;&quot;, &quot;&amp;lt;&amp;lt;     term[i].getFirstName()&amp;lt;&amp;lt; endl                &amp;lt;&amp;lt; &quot;Student Number : &quot; &amp;lt;&amp;lt; term[i].getId() &amp;lt;&amp;lt; endl;       }  }       &lt;/code&gt;&lt;/pre&gt;</Body>
<Tags>c++,parsing,vector,text-files</Tags>
</question>
<answer>
<Body>&lt;p&gt;I guess, you are actually constructing an &lt;code&gt;ifstream&lt;/code&gt; object but not opening the file to perform input operations on it. You are missing the second parameter of the &lt;code&gt;ifstream&lt;/code&gt; object construction , which actually opens the file as if the call is made to open the file. So try -&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ifstream infile(&quot;spring2011.txt&quot;, ifstream::in );&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ifstream infile; infile.open (&quot;spring2011.txt&quot;, ifstream::in);&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
