<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Compare previous file size with the current filesize and flag</Title>
<Body>&lt;p&gt;I have a bash script which loops through all YAML files in the &lt;code&gt;yaml&lt;/code&gt; directory, executing a python script. This python scripts simply prints out if the JSON file exists along with its file size as well as YAML file existing.&lt;/p&gt;&lt;p&gt;Essentially, I am trying to save the file size of the last run and compare this with the filesize of the current run. If the difference of the filesize is more than 50% , this will flag the JSON file with a log or print statement. I have been looking at the python &lt;code&gt;os&lt;/code&gt; module to use the following function to store the last access time of the file&lt;/p&gt;&lt;pre&gt;&lt;code&gt;def getatime(filename):    &quot;&quot;&quot;Return the last access time of a file, reported by os.stat().&quot;&quot;&quot;    return os.stat(filename).st_atime&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I can save the last access time in a variable&lt;br&gt;I can also save the file size in a variable&lt;/p&gt;&lt;p&gt;Would I need to create a conditional statement and compare the last run file size with the current run file size?&lt;/p&gt;</Body>
<Tags>python,json,python-2.7,python-os</Tags>
</question>
<answer>
<Body>&lt;p&gt;No, a conditional statement is not necessarily. &lt;/p&gt;&lt;p&gt;In order to compare the previous file size with the current file size you need to use a comparison operator (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, etc). Assuming you read the previous size  from some file into a dictionary &lt;code&gt;sz&lt;/code&gt; that maps path names to file sizes, you can do the comparison, for some file name stored in the variable &lt;code&gt;file_name&lt;/code&gt; as follows:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sz[file_name] &amp;lt; os.path.getsize(file_name)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You will quite often see this in a conditional statement:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;if sz[file_name] &amp;lt; os.path.getsize(file_name):    print(&#x27;size has increased&#x27;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;but that is not the only way to get the message printed. You could e.g. also use:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;try:    assert sz[file_name] &amp;lt; os.path.getsize(file_name)    print(&#x27;size has increased&#x27;)except AssertionError:    pass&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;while sz[file_name] &amp;lt; os.path.getsize(file_name):    print(&#x27;size has increased&#x27;)    break&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;All having the same effect.&lt;/p&gt;</Body>
</answer>
</qroot>
