<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>How to extract patristic distances from dendropy phylogenetic_distance_matrix</Title>
<Body>&lt;p&gt;I have created a cophenetic distance matrix in dendropy using:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from dendropy.simulate import treesimtree = treesim.birth_death_tree(birth_rate=1.0, death_rate=0.5, ntax=10)pdm = tree.phylogenetic_distance_matrix()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However, having read the documentation and trying many things I cannot extract the actual matrix in a usable manner from the object &quot;pdm&quot;&lt;/p&gt;&lt;p&gt;NB there is a method &lt;code&gt;as_data_table&lt;/code&gt; with this class that I am also unable to fathom&lt;/p&gt;</Body>
<Tags>python,dendropy</Tags>
</question>
<answer>
<Body>&lt;p&gt;&lt;code&gt;as_data_table()&lt;/code&gt; returns an object of type &lt;code&gt;dendropy.utility.container.DataTable&lt;/code&gt;. This &lt;code&gt;DataTable&lt;/code&gt; is a custom container class, which implements lots of useful methods you can use to get at your data. You can read the source here to understand it:&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://dendropy.org/_modules/dendropy/utility/container.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://dendropy.org/_modules/dendropy/utility/container.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;You can very quickly see the data in a format you can understand by looking at its &lt;code&gt;_data&lt;/code&gt; variable:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;from dendropy.simulate import treesimimport pprinttree = treesim.birth_death_tree(birth_rate=1.0, death_rate=0.5, ntax=10)pdm = tree.phylogenetic_distance_matrix()pp = pprint.PrettyPrinter(depth=2)pp.pprint(pdm.as_data_table()._data)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Outputs:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{&#x27;T1&#x27;: {&#x27;T1&#x27;: 0.0,        &#x27;T10&#x27;: 1.832709865628535,        &#x27;T2&#x27;: 2.2418431376329204,        &#x27;T3&#x27;: 1.8146189808922477,        &#x27;T4&#x27;: 1.832709865628535,        &#x27;T5&#x27;: 1.832709865628535,        &#x27;T6&#x27;: 0.5848837844916799,        &#x27;T7&#x27;: 0,        &#x27;T8&#x27;: 1.6307174196094565,        &#x27;T9&#x27;: 1.8146189808922477}, &#x27;T10&#x27;: {&#x27;T1&#x27;: 1.832709865628535,         &#x27;T10&#x27;: 0.0,         &#x27;T2&#x27;: 2.2418431376329204,         &#x27;T3&#x27;: 1.832709865628535,         &#x27;T4&#x27;: 0.8434862029618123,         &#x27;T5&#x27;: 1.215095937098336,         &#x27;T6&#x27;: 1.832709865628535,         &#x27;T7&#x27;: 1.832709865628535,         &#x27;T8&#x27;: 1.832709865628535,         &#x27;T9&#x27;: 1.832709865628535}, &#x27;T2&#x27;: {&#x27;T1&#x27;: 2.2418431376329204,        &#x27;T10&#x27;: 2.2418431376329204,        &#x27;T2&#x27;: 0.0,        &#x27;T3&#x27;: 2.2418431376329204,        &#x27;T4&#x27;: 2.2418431376329204,        &#x27;T5&#x27;: 2.2418431376329204,        &#x27;T6&#x27;: 2.2418431376329204,        &#x27;T7&#x27;: 2.2418431376329204,        &#x27;T8&#x27;: 2.2418431376329204,        &#x27;T9&#x27;: 2.2418431376329204}, &#x27;T3&#x27;: {&#x27;T1&#x27;: 1.8146189808922477,        &#x27;T10&#x27;: 1.832709865628535,        &#x27;T2&#x27;: 2.2418431376329204,        &#x27;T3&#x27;: 0.0,        &#x27;T4&#x27;: 1.832709865628535,        &#x27;T5&#x27;: 1.832709865628535,        &#x27;T6&#x27;: 1.8146189808922477,        &#x27;T7&#x27;: 1.8146189808922477,        &#x27;T8&#x27;: 1.8146189808922477,        &#x27;T9&#x27;: 1.4811625503429378}, &#x27;T4&#x27;: {&#x27;T1&#x27;: 1.832709865628535,        &#x27;T10&#x27;: 0.8434862029618123,        &#x27;T2&#x27;: 2.2418431376329204,        &#x27;T3&#x27;: 1.832709865628535,        &#x27;T4&#x27;: 0.0,        &#x27;T5&#x27;: 1.215095937098336,        &#x27;T6&#x27;: 1.832709865628535,        &#x27;T7&#x27;: 1.832709865628535,        &#x27;T8&#x27;: 1.832709865628535,        &#x27;T9&#x27;: 1.832709865628535}, &#x27;T5&#x27;: {&#x27;T1&#x27;: 1.832709865628535,        &#x27;T10&#x27;: 1.215095937098336,        &#x27;T2&#x27;: 2.2418431376329204,        &#x27;T3&#x27;: 1.832709865628535,        &#x27;T4&#x27;: 1.215095937098336,        &#x27;T5&#x27;: 0.0,        &#x27;T6&#x27;: 1.832709865628535,        &#x27;T7&#x27;: 1.832709865628535,        &#x27;T8&#x27;: 1.832709865628535,        &#x27;T9&#x27;: 1.832709865628535}, &#x27;T6&#x27;: {&#x27;T1&#x27;: 0.5848837844916799,        &#x27;T10&#x27;: 1.832709865628535,        &#x27;T2&#x27;: 2.2418431376329204,        &#x27;T3&#x27;: 1.8146189808922477,        &#x27;T4&#x27;: 1.832709865628535,        &#x27;T5&#x27;: 1.832709865628535,        &#x27;T6&#x27;: 0.0,        &#x27;T7&#x27;: 0.5848837844916799,        &#x27;T8&#x27;: 1.6307174196094565,        &#x27;T9&#x27;: 1.8146189808922477}, &#x27;T7&#x27;: {&#x27;T1&#x27;: 0,        &#x27;T10&#x27;: 1.832709865628535,        &#x27;T2&#x27;: 2.2418431376329204,        &#x27;T3&#x27;: 1.8146189808922477,        &#x27;T4&#x27;: 1.832709865628535,        &#x27;T5&#x27;: 1.832709865628535,        &#x27;T6&#x27;: 0.5848837844916799,        &#x27;T7&#x27;: 0.0,        &#x27;T8&#x27;: 1.6307174196094565,        &#x27;T9&#x27;: 1.8146189808922477}, &#x27;T8&#x27;: {&#x27;T1&#x27;: 1.6307174196094565,        &#x27;T10&#x27;: 1.832709865628535,        &#x27;T2&#x27;: 2.2418431376329204,        &#x27;T3&#x27;: 1.8146189808922477,        &#x27;T4&#x27;: 1.832709865628535,        &#x27;T5&#x27;: 1.832709865628535,        &#x27;T6&#x27;: 1.6307174196094565,        &#x27;T7&#x27;: 1.6307174196094565,        &#x27;T8&#x27;: 0.0,        &#x27;T9&#x27;: 1.8146189808922477}, &#x27;T9&#x27;: {&#x27;T1&#x27;: 1.8146189808922477,        &#x27;T10&#x27;: 1.832709865628535,        &#x27;T2&#x27;: 2.2418431376329204,        &#x27;T3&#x27;: 1.4811625503429378,        &#x27;T4&#x27;: 1.832709865628535,        &#x27;T5&#x27;: 1.832709865628535,        &#x27;T6&#x27;: 1.8146189808922477,        &#x27;T7&#x27;: 1.8146189808922477,        &#x27;T8&#x27;: 1.8146189808922477,        &#x27;T9&#x27;: 0.0}}&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
