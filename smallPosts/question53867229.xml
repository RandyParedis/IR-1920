<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Why is a Pytest Parametrize not recognized when the method is called?</Title>
<Body>&lt;p&gt;I have this Python code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import pytestclass Apple:    @pytest.mark.parametrize(&quot;kind&quot;, [&#x27;fruit&#x27;, &#x27;veg&#x27;, &#x27;nuts&#x27;])    def mix_kind_and_colour(self, kind):        print(kind)        return self    def runner():        return Apple.mix_kind_and_colour()        if __name__== &quot;__main__&quot;:        runner()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But I get this error:&lt;/p&gt;&lt;blockquote&gt;  &lt;p&gt;TypeError: mix_kind_and_colour() missing 2 required positional arguments: &#x27;self&#x27; and &#x27;kind&#x27;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;How do I resolve this?&lt;/p&gt;</Body>
<Tags>python,python-3.x,pytest</Tags>
</question>
<answer>
<Body>&lt;blockquote&gt;  &lt;p&gt;Please have look at pytest&#x27;s &lt;a href=&quot;https://docs.pytest.org/en/latest/getting-started.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;docu&lt;/a&gt;, it&#x27;s quite fine.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;You don&#x27;t need classes, until you want to group tests.&lt;/p&gt;&lt;p&gt;But you need to follow some &lt;a href=&quot;https://docs.pytest.org/en/latest/goodpractices.html#test-discovery&quot; rel=&quot;nofollow noreferrer&quot;&gt;naming conventions&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;A simple working example of a test_sample.py for running &lt;code&gt;pytest&lt;/code&gt; command from your terminal would be: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;import pytest@pytest.mark.parametrize(&quot;kind&quot;, [&#x27;fruit&#x27;, &#x27;veg&#x27;, &#x27;nuts&#x27;])def test_mix_kind_and_colour(kind):    print(kind)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you want to use a class try to run &lt;code&gt;pytest&lt;/code&gt; for: &lt;/p&gt;&lt;pre&gt;&lt;code&gt;import pytestclass TestApple:    @pytest.mark.parametrize(&quot;kind&quot;, [&#x27;fruit&#x27;, &#x27;veg&#x27;, &#x27;nuts&#x27;])    def test_mix_kind_and_colour(self, kind):        print(kind)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But you additional need some &lt;a href=&quot;https://docs.pytest.org/en/latest/assert.html&quot; rel=&quot;nofollow noreferrer&quot;&gt;assertions&lt;/a&gt; for testing something?!?&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# content of test_assert1.pydef f():    return 3def test_function():    assert f() == 4&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
