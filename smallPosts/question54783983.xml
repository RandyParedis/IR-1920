<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Django/Django-Tagulous Filter with tag amount</Title>
<Body>&lt;p&gt;I have an app called &lt;code&gt;Article&lt;/code&gt;. I&#x27;m using django-tagulous for tagging. I want to filter articles with the amount of same tags. Example:&lt;/p&gt;&lt;p&gt;&lt;code&gt;Article 1&lt;/code&gt; and &lt;code&gt;Article 2&lt;/code&gt; have 10 tags. 4 of them are the same.&lt;code&gt;Article 1&lt;/code&gt; and &lt;code&gt;Article 3&lt;/code&gt; have 10 tags. 7 of them are the same.&lt;/p&gt;&lt;p&gt;In this scenario &lt;code&gt;Article 3&lt;/code&gt; should be returned because 70% of the tags are the same. Another scenario:&lt;/p&gt;&lt;p&gt;&lt;code&gt;Article 4&lt;/code&gt; has 4 tags, &lt;code&gt;Article 5&lt;/code&gt; has all tags of &lt;code&gt;Article 4&lt;/code&gt; plus 2 more. &lt;code&gt;Article 4&lt;/code&gt; has 4 tags, &lt;code&gt;Article 6&lt;/code&gt; has 2 tags of &lt;code&gt;Article 4&lt;/code&gt; plus 8 more.&lt;/p&gt;&lt;p&gt;In this scenario &lt;code&gt;Article 5&lt;/code&gt; should be returned.&lt;/p&gt;&lt;p&gt;I&#x27;m using a custom queryset on &lt;code&gt;Article&lt;/code&gt; to filter for tags:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class QuerySet(QuerySet):    def tag_search(self, tags, this_article_id):        tags = [tag for tag in tags]        same = Article.objects.filter(Q(tags__in=tags))        same.exclude(id__in=[this_article_id])        same = [Article.objects.filter(id=s) for s in set(s.id for s in same)]        return same&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;my objects on Article:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;objects = CustomQuerySetManager()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;my &lt;code&gt;CustomQuerySetManager&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class CustomQuerySetManager(models.Manager):    &quot;&quot;&quot;A re-usable Manager to access a custom QuerySet&quot;&quot;&quot;    def __getattr__(self, attr, *args):        try:            return getattr(self.__class__, attr, *args)        except AttributeError:            # don&#x27;t delegate internal methods to the queryset            if attr.startswith(&#x27;__&#x27;) and attr.endswith(&#x27;__&#x27;):                raise            return getattr(self.get_query_set(), attr, *args)    def get_query_set(self):        return self.model.QuerySet(self.model, using=self._db)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;:&lt;code&gt;tag_search&lt;/code&gt; doesn&#x27;t work properly and doesn&#x27;t exclude &lt;code&gt;this_article_id&lt;/code&gt;.&lt;/p&gt;</Body>
<Tags>python,django</Tags>
</question>
</qroot>
