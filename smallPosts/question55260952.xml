<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Updating a row with multiple different values in python with sqlite3</Title>
<Body>&lt;p&gt;I have looked at many similar sources to this question but can&#x27;t seem to find an answer that solves my problem. &lt;/p&gt;&lt;p&gt;I am using python3.7.1 and sqlite3 to essentially create quizzes. I have an array of questions which I have inserted into a table, with a &#x27;Class_name&#x27; and &#x27;quizNumber&#x27; using this code example:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;quizQuestion = [&#x27;1 + 1 =&#x27;, &#x27;2 + 2 =&#x27;, &#x27;3 + 3 =&#x27;,...]quizNumber = (1)quizClass = (&#x27;6D&#x27;)for question in quizQuestions:    cursor.execute( &quot;INSERT INTO set_questionsTbl (QuizNumber, Class_name, Question) VALUES (?,?,?)&quot;, (quizNumber,quizClass,question))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This code works fine and the table(set_questionsTbl) looks like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;QuizNumber | Class_name | Question | Answer -------------------------------------------1          | 6D         | 1 + 1 =  | 1          | 6D         | 2 + 2 =  |1          | 6D         | 3 + 3 =  |etc..&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I also have an array of answers:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;quizAnswers = [2,4,6,...]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The problem that occurs is when trying to update the table with the answers so it looks like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;QuizNumber | Class_name | Question | Answer -------------------------------------------1          | 6D         | 1 + 1 =  | 21          | 6D         | 2 + 2 =  | 41          | 6D         | 3 + 3 =  | 6etc...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The code I tried was this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for answer in quizAnswers:    cursor.execute(&quot;UPDATE set_questionsTbl SET Answer = (?) &quot;, (answer,))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This didn&#x27;t work as with every loop the previous inputted answer got overwritten leaving me with this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;QuizNumber | Class_name | Question | Answer -------------------------------------------1          | 6D         | 1 + 1 =  | 61          | 6D         | 2 + 2 =  | 61          | 6D         | 3 + 3 =  | 6etc...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I have also tried joining the loops together but that doesn&#x27;t work, table looks like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;QuizNumber | Class_name | Question | Answer -------------------------------------------1          | 6D         | 1 + 1 =  | 21          | 6D         | 2 + 2 =  | 21          | 6D         | 3 + 3 =  | 21          | 6D         | 1 + 1 =  | 41          | 6D         | 2 + 2 =  | 41          | 6D         | 3 + 3 =  | 41          | 6D         | 1 + 1 =  | 61          | 6D         | 2 + 2 =  | 61          | 6D         | 3 + 3 =  | 6&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I have tried to correct this many times and searched many different examples but couldn&#x27;t seem to find a solution. So how do I loop through each question and update the answer with each answer in quizAnswers?&lt;/p&gt;&lt;p&gt;I am new to stack overflow so I may have missed a question similar to this, if so please link it. &lt;/p&gt;</Body>
<Tags>python,python-3.x,for-loop,sqlite</Tags>
</question>
<answer>
<Body>&lt;p&gt;You should have a unique ID for at least one of the fields in your table. That way when you execute the answer update, you could add a WHERE clause, e.g:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    cursor.execute( &quot;UPDATE set_questionsTbl SET answer=? WHERE unique_id=?&quot;, (answer,uniqueId))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and that way not all of your records will be updated.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;The point you are missing is, that you instruct your database to update &lt;em&gt;all&lt;/em&gt; records with the answer in the current iteration of the loop.&lt;br&gt;Your example:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;quizAnswers = [2,4,6]for answer in quizAnswers:    cursor.execute(&quot;UPDATE set_questionsTbl SET Answer = (?) &quot;, (answer,))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;basically does:&lt;br&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;set Answer for *all* records to 2set Answer for *all* records to 4set Answer for *all* records to 6&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Your database does not understand the meaning of the data you put into the tables. For the DB, the questions you inserted into the &lt;code&gt;Question&lt;/code&gt; column of your &lt;code&gt;set_questionsTbl&lt;/code&gt; are just sequences of characters. It has no means of evaluating the equation in &lt;code&gt;Question&lt;/code&gt; in order to set a value in &lt;code&gt;Answer&lt;/code&gt; only if that value is the result of the equation.&lt;/p&gt;&lt;p&gt;You need to tell your DB which answer to set for which question(s).You need to give your query criteria, that a record must meet for the update operation to be applied to it. That&#x27;s what &lt;a href=&quot;https://en.wikipedia.org/wiki/Where_(SQL)&quot; rel=&quot;nofollow noreferrer&quot;&gt;WHERE clauses&lt;/a&gt; are for.&lt;/p&gt;&lt;p&gt;Following your example, you&#x27;ll want to create a correlation between questions and their respective answers. The below is &lt;em&gt;one&lt;/em&gt; way to do that.&lt;/p&gt;&lt;p&gt;First, create a list of tuples. Each tuple contains an answer in the first element, the second element holds the corresponding question (this needs to be the exact value you inserted into the &lt;code&gt;Question&lt;/code&gt; column).&lt;/p&gt;&lt;pre&gt;&lt;code&gt;quiz_question_answers = [(2, &#x27;1 + 1 =&#x27;), (4, &#x27;2 + 2 =&#x27;), (6, &#x27;3 + 3 =&#x27;)] &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then you can iterate over that list of tuples to execute the UPDATE query in your cursor:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for q_a in quiz_question_answers:    cursor.execute(&quot;UPDATE set_questionsTbl SET Answer = ? WHERE Question = ?&quot;, (q_a[0], q_a[1]))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will update the answer in &lt;em&gt;all&lt;/em&gt; records that have the specific equation in &lt;code&gt;Question&lt;/code&gt;. Records with different &lt;code&gt;Class_name&lt;/code&gt; and/or &lt;code&gt;QuizNumber&lt;/code&gt; - a record like this for example:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;QuizNumber | Class_name | Question | Answer -------------------------------------------4          | 5A         | 1 + 1 =  | &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;- will be updated as well, because the only criteria, the &lt;code&gt;Question&lt;/code&gt; equaling &lt;code&gt;1 + 1 =&lt;/code&gt;, is met for this record also.&lt;/p&gt;&lt;p&gt;If you want the answers to be set only for questions of quiz number 1 for class 6D, you&#x27;ll have to add more restrictive criteria to your query, e.g.:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;quiz_question_answers = [(2, &#x27;1 + 1 =&#x27;, 1, &#x27;6D&#x27;), (4, &#x27;2 + 2 =&#x27;, 1, &#x27;6D&#x27;), (6, &#x27;3 + 3 =&#x27;, 1, &#x27;6D&#x27;)]for q_a in quiz_question_answers:    cursor.execute(&quot;UPDATE set_questionsTbl &quot;                   &quot;SET Answer = ? &quot;                   &quot;WHERE Question = ? &quot;                   &quot;AND QuizNumber = ? &quot;                   &quot;AND Class_name = ?&quot;,                   (q_a[0], q_a[1], q_a[2], q_a[3]))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this particular solution (using a list of tuples with the query parameters in the correct order) you can also use &lt;a href=&quot;https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.executemany&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;executemany&lt;/code&gt;&lt;/a&gt; to let the cursor do the loop over the list of parameter tuples for you:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;quiz_question_answers = [(2, &#x27;1 + 1 =&#x27;), (4, &#x27;2 + 2 =&#x27;), (6, &#x27;3 + 3 =&#x27;)]cursor.executemany(&quot;UPDATE set_questionsTbl SET Answer = ? WHERE Question = ?&quot;, quiz_question_answers)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;http://www.sqlitetutorial.net/sqlite-where/&quot; rel=&quot;nofollow noreferrer&quot;&gt;Here&lt;/a&gt;&#x27;s some further reading on WHERE clauses specifically for SQLite.&lt;/p&gt;</Body>
</answer>
</qroot>
