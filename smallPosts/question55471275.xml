<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Escape extra quotes in malformed xml</Title>
<Body>&lt;p&gt;I&#x27;ve malformed xml file that contains extra quotes in a tag. I would like to remove them or replace by &amp;amp;quote. Malformed XML looks looks like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;CLASS ATT2=&quot;PDX&quot;R&quot;088&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My expected result:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;CLASS ATT2=&quot;PDX R 088&quot;&amp;gt;or&amp;lt;CLASS ATT2=&quot;PDX&amp;amp;quot;R&amp;amp;quot;088&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&#x27;ve tried to iterate through all lines and finding ATT first and last indexes but it&#x27;s quite dirty and produces too much code. &lt;/p&gt;&lt;p&gt;Do anyone have simple solution for this?&lt;/p&gt;</Body>
<Tags>python,xml,python-3.x</Tags>
</question>
<answer>
<Body>&lt;p&gt;This is not 100% foolproof, but might work with a little luck:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;re.sub(r&#x27;(?&amp;lt;!=)&quot;(?!&amp;gt;)&#x27;, &#x27;&amp;amp;quot;&#x27;, malformed_xml)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;will only replace quotes that are neither preceded by &lt;code&gt;=&lt;/code&gt; nor followed by &lt;code&gt;&amp;gt;&lt;/code&gt;. &lt;/p&gt;&lt;p&gt;If there could be whitespace after &lt;code&gt;=&lt;/code&gt; (or before &lt;code&gt;&amp;gt;&lt;/code&gt;), you can&#x27;t use the &lt;code&gt;re&lt;/code&gt; module anymore, but the &lt;a href=&quot;https://pypi.python.org/pypi/regex&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;code&gt;regex&lt;/code&gt; module (PyPI)&lt;/a&gt; can work with this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;regex.sub(r&#x27;(?&amp;lt;!=\s*)&quot;(?!\s*&amp;gt;)&#x27;, &#x27;&amp;amp;quot;&#x27;, malformed_xml)&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;Not the best solution maybe, but since you cannot parse it with (e.g.) xml.etree as it is invalid, you can try playing with something like the code below.&lt;/p&gt;&lt;p&gt;It will:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;open the file&lt;/li&gt;&lt;li&gt;read it line by line&lt;/li&gt;&lt;li&gt;search for each line if there&#x27;s a specific string (e.g. &lt;code&gt;CLASS&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;if &lt;code&gt;CLASS&lt;/code&gt; is found, find all the occurrences of double quotes (&lt;code&gt;&quot;&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;check if more than two double-quotes are found and replace them with white space&lt;/li&gt;&lt;li&gt;update the lines&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;WARNING: BACKUP YOUR ORIGINAL FILE AS THIS WILL MODIFY IT!!!&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import ref = open(r&#x27;YOUR/FILE/HERE&#x27;,&quot;r+b&quot;)lines = f.readlines()for idx, row in enumerate(lines):     if &quot;CLASS&quot; in row:         quote_index = [x.start() for x in re.finditer(&#x27;\&quot;&#x27;, row)]         if len(quote_index) &amp;gt; 2:             replace_quote = quote_index[1:-1]             correct_row = list(row)             for quotes in replace_quote:                 correct_row[quotes] = &quot; &quot;             new_row = &quot;&quot;.join(correct_row)             lines[idx] = new_rowf.seek(0)f.truncate()f.write(&#x27;&#x27;.join(lines))f.close()&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
</qroot>
