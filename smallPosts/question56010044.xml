<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>Can&#x27;t assign array to another array</Title>
<Body>&lt;p&gt;I can&#x27;t assign an array to another array with for loop. Below is my code sample.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;df = pd.read_csv(&#x27;20-newsgroups-ciphertext-challenge/train.csv&#x27;)data_1 = df.query(&#x27;difficulty==1&#x27;)X = data_1.iloc[:,-2]y = data_1.iloc[:,-1]def tokenize(text):     return text.split(&quot;1&quot;)data = Xprint(type(data))print(type(X))for i in range(len(X)):    data[i]=tokenize(X[i])&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Below is the error code. I don&#x27;t understand anything from it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;---------------------------------------------------------------------------KeyError                                  Traceback (most recent call last)&amp;lt;ipython-input-32-4637ad724b98&amp;gt; in &amp;lt;module&amp;gt;     19 print(type(X))     20 for i in range(len(X)):---&amp;gt; 21     data[i]=tokenize(X[i])     22      23 #print(data.head)~/anaconda3/lib/python3.7/site-packages/pandas/core/series.py in __getitem__(self, key)    765         key = com._apply_if_callable(key, self)    766         try:--&amp;gt; 767             result = self.index.get_value(self, key)    768     769             if not is_scalar(result):~/anaconda3/lib/python3.7/site-packages/pandas/core/indexes/base.py in get_value(self, series, key)   3116         try:   3117             return self._engine.get_value(s, k,-&amp;gt; 3118                                           tz=getattr(series.dtype, &#x27;tz&#x27;, None))   3119         except KeyError as e1:   3120             if len(self) &amp;gt; 0 and self.inferred_type in [&#x27;integer&#x27;, &#x27;boolean&#x27;]:pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_value()pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_value()pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item()pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_item()KeyError: 0&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I am newbie for python and this seems very easy situation here but I would appreciate for solution. &lt;strong&gt;I want X array to be tokenized and assign it to data array.&lt;/strong&gt;&lt;/p&gt;</Body>
<Tags>python</Tags>
</question>
<answer>
<Body>&lt;p&gt;Print off &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;X[i]&lt;/code&gt; in the loop instead of sending it to &lt;code&gt;tokenize()&lt;/code&gt; function: &lt;code&gt;KeyError&lt;/code&gt; means that you cannot access the &lt;code&gt;ith&lt;/code&gt; element of &lt;code&gt;X&lt;/code&gt;.&lt;/p&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;As stated, &lt;code&gt;KeyError&lt;/code&gt; means you&#x27;re accessing a key (index) that doesn&#x27;t exist in that list.&lt;/p&gt;&lt;p&gt;On top of that, I believe you could simplify this code:&lt;/p&gt;&lt;pre class=&quot;lang-py prettyprint-override&quot;&gt;&lt;code&gt;for i in range(len(X)):    data[i]=tokenize(X[i])&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;By doing this:&lt;/p&gt;&lt;pre class=&quot;lang-py prettyprint-override&quot;&gt;&lt;code&gt;data = [tokenize(i) for i in X]&lt;/code&gt;&lt;/pre&gt;</Body>
</answer>
<answer>
<Body>&lt;p&gt;the way you are iterating your dataframe is wrong&lt;/p&gt;&lt;pre&gt;&lt;code&gt;for i in data.columns :             data[i] = data[i].apply(lambda x: tokenize(x))&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;you don&#x27;t even need X&lt;/p&gt;</Body>
</answer>
</qroot>
