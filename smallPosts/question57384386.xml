<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>ERROR (glitch in pandas?) : Why when indexes of a pandas.core.series.Series are numbers as strings python can&#x27;t retrive the its values?</Title>
<Body>&lt;p&gt;I&#x27;m going to the grain. Every one knows that a column, say &lt;code&gt;col = df[&#x27;field&#x27;]&lt;/code&gt; is a &#x27;pandas.core.series.Series&#x27;. And also &lt;code&gt;counts = df[&#x27;field&#x27;].value_counts()&lt;/code&gt; with the method &lt;code&gt;value_counts()&lt;/code&gt; is a &#x27;pandas.core.series.Series&#x27; data type.&lt;/p&gt;&lt;p&gt;And that you can extract the value from the first row of a &#x27;pandas.core.series.Series&#x27; with double brackets: &lt;code&gt;col[0]&lt;/code&gt; or &lt;code&gt;counts[0]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Nontheless indexes from &lt;code&gt;col&lt;/code&gt; and &lt;code&gt;counts&lt;/code&gt; are different. And this insight is what I think is the problem I&#x27;m about to present.&lt;/p&gt;&lt;p&gt;I have the next &#x27;pandas.core.series.Series&#x27; data type generated by the next code:&lt;/p&gt;&lt;p&gt;We read the data frame as df&lt;/p&gt;&lt;pre&gt;&lt;code&gt;df = pd.read_csv(&#x27;file.csv&#x27;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;df has &#x27;year&#x27; and &#x27;product&#x27; columns, which I get its unique values and transform them into strings&lt;/p&gt;&lt;pre&gt;&lt;code&gt;vals_year = df[&#x27;year&#x27;].astype(&#x27;str&#x27;).unique()vals_product = df[&#x27;product&#x27;].astype(&#x27;str&#x27;).unique()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is the content in each variable:    &lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;vals_year&amp;gt;&amp;gt;&amp;gt;[&#x27;16&#x27; &#x27;18&#x27; &#x27;17&#x27;]&amp;gt;&amp;gt;&amp;gt; vals_product  &amp;gt;&amp;gt;&amp;gt;[&#x27;card&#x27; &#x27;cash&#x27;]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then I use the &lt;code&gt;value_counts()&lt;/code&gt; method to count and create &#x27;pandas.core.series.Series&#x27; data type :&lt;/p&gt;&lt;pre&gt;&lt;code&gt;cy = df[&#x27;year&#x27;].value_counts()cp = df[&#x27;product&#x27;].value_counts()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is the output:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;cy&amp;gt;&amp;gt;&amp;gt;16  65   17  40   18  12   Name: year, dtype: int64&amp;gt;&amp;gt;&amp;gt;cp&amp;gt;&amp;gt;&amp;gt;card  123   cash  106   Name: product, dtype: int64&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is the first value of &lt;code&gt;cp&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;cp[0]&amp;gt;&amp;gt;&amp;gt;123&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But when I try to see the first value from &lt;code&gt;cy&lt;/code&gt; this happens:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;cy[0]Traceback (most recent call last):File &quot;C:.../Test3.py&quot;, line 44, in &amp;lt;module&amp;gt;print(cr[0])File &quot;C:\...\venv\lib\site-packages\pandas\core\series.py&quot;, line 1064, in __getitem__result = self.index.get_value(self, key)File &quot;C:\...\venv\lib\site-packages\pandas\core\indexes\base.py&quot;, line 4723, in get_valuereturn self._engine.get_value(s, k, tz=getattr(series.dtype, &quot;tz&quot;, None))File &quot;pandas\_libs\index.pyx&quot;, line 80, in pandas._libs.index.IndexEngine.get_valueFile &quot;pandas\_libs\index.pyx&quot;, line 88, in pandas._libs.index.IndexEngine.get_valueFile &quot;pandas\_libs\index.pyx&quot;, line 131, in pandas._libs.index.IndexEngine.get_locFile &quot;pandas\_libs\hashtable_class_helper.pxi&quot;, line 992, in pandas._libs.hashtable.Int64HashTable.get_itemFile &quot;pandas\_libs\hashtable_class_helper.pxi&quot;, line 998, in pandas._libs.hashtable.Int64HashTable.get_itemKeyError: 0&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(I just copy paste the message)&lt;/p&gt;&lt;p&gt;Why this happens? It makes no sense!! Is this a glitch in pandas? I believe the problem resides, as I said before, in the fact that The original values from &lt;code&gt;&#x27;year&#x27;&lt;/code&gt; column were ints&lt;/p&gt;</Body>
<Tags>python,pandas,series,keyerror</Tags>
</question>
</qroot>
