<?xml version="1.0" encoding="utf-8"?>
<qroot>
<question>
<Title>&quot;Missing&quot; method attributes when using Suds</Title>
<Body>&lt;p&gt;I am developing a Soap client with Suds, and I have a problem. I create the client and just print it to know the available methods:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    wsdl_url=&#x27;http://ws04.iula.upf.edu/soaplab2-axis/typed/services/tokenization.freeling_tokenizer?wsdl&#x27;    FL_ws=Client(wsdl_url)    print FL_ws&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And my output is (I deleted some parts to ease reading):&lt;/p&gt;&lt;pre&gt;&lt;code&gt;   Ports (1):  (freeling_tokenizerPort)     Methods (11):        clear(ns2:jobId jobId, )        describe()        getLastEvent(ns2:jobId jobId, )        getResults(ns2:jobId jobId, )        run(ns1:language language, )        runAndWaitFor(ns1:language language, )     Types (22):        ns1:RunAndWaitFor        ns1:appInputs        ns1:appResults        ns2:describeRequest        ns2:jobId&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that there are many methods that have a missing attribute ate the end, for example: runAndWaitFor(ns1:language language, ). According to the WISDL, this missing attribute is a text, that may be given as direct data or as url:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xs:complexType name=&quot;appInputs&quot;&amp;gt; &amp;lt;xs:sequence&amp;gt;  &amp;lt;xs:choice id=&quot;input&quot;&amp;gt;   &amp;lt;xs:element name=&quot;input_direct_data&quot; type=&quot;xs:string&quot;/&amp;gt;   &amp;lt;xs:element name=&quot;input_url&quot; type=&quot;xs:string&quot;/&amp;gt;  &amp;lt;/xs:choice&amp;gt;  &amp;lt;xs:element name=&quot;language&quot;&amp;gt;   &amp;lt;xs:simpleType&amp;gt;    &amp;lt;xs:restriction base=&quot;xs:string&quot;&amp;gt;     &amp;lt;xs:enumeration value=&quot;en&quot;/&amp;gt;     &amp;lt;xs:enumeration value=&quot;es&quot;/&amp;gt;    &amp;lt;/xs:restriction&amp;gt;   &amp;lt;/xs:simpleType&amp;gt;  &amp;lt;/xs:element&amp;gt; &amp;lt;/xs:sequence&amp;gt;&amp;lt;/xs:complexType&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, I am not sure how to call this method. In Perl, it works fine defining and input structure like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# Inputs structuremy $inputs = {    input_direct_data =&amp;gt; &quot;$input_direct_data&quot;,    language =&amp;gt; &quot;$language&quot;};&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So I tried the following:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    input = FL_ws.factory.create(&#x27;ns1:appInputs&#x27;)    input[&#x27;input_direct_data&#x27;]=&#x27;The house is red.&#x27;    input[&#x27;language&#x27;]=&#x27;en&#x27;    result=FL_ws.service.runAndWaitFor(input)    print result&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But the xml generated by Suds is incorrect:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;ns1:Body&amp;gt;  &amp;lt;ns0:runAndWaitFor&amp;gt;     &amp;lt;language&amp;gt;        &amp;lt;input_direct_data&amp;gt;The house is red.&amp;lt;/input_direct_data&amp;gt;        &amp;lt;language&amp;gt;en&amp;lt;/language&amp;gt;     &amp;lt;/language&amp;gt;  &amp;lt;/ns0:runAndWaitFor&amp;gt;&amp;lt;/ns1:Body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Since it puts input_direct_data under &lt;code&gt;&amp;lt;language&amp;gt;&lt;/code&gt;. I found &lt;a href=&quot;https://stackoverflow.com/questions/2802944/incorrect-xml-produced-by-suds&quot;&gt;this&lt;/a&gt; post with a similar problem with XML, but their solution does not work for me. It seems to me that my problem is related to how Suds deals with the choice input, since it does not seem to accept input_direct_data as a parameter. &lt;/p&gt;&lt;p&gt;The error I got is always:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;suds.WebFault: Server raised fault: &#x27;Soaplab not able to process the input request: &#x27;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So it seems that the input is not reaching correctly the service...&lt;/p&gt;&lt;p&gt;Any ideas about how to solve this, or how can I figure out how Suds expect this input to be, will be very helpful.&lt;/p&gt;&lt;p&gt;Thank you very much for your help.&lt;/p&gt;</Body>
<Tags>python,soap,suds</Tags>
</question>
<answer>
<Body>&lt;p&gt;I have found a solution: &lt;/p&gt;&lt;p&gt;I was using the &lt;a href=&quot;http://ws04.iula.upf.edu/soaplab2-axis/typed/services/tokenization.freeling_tokenizer?wsdl&quot; rel=&quot;nofollow&quot;&gt;&quot;typed&quot;&lt;/a&gt; wisdl to create the Client, but, for some reason Suds is not able to get the parameters correctly from it. Then, I learnt that there was another &lt;a href=&quot;http://ws04.iula.upf.edu/soaplab2-axis/services/tokenization.freeling_tokenizer?wsdl&quot; rel=&quot;nofollow&quot;&gt;&quot;non-typed&quot;&lt;/a&gt; wisdl available for the same service. Using it to create the Suds client, it is able to correctly get the complex parameters for the methods and I succesfully built the client.&lt;/p&gt;&lt;p&gt;The services I am trying to acces have been created with SoapLab. First I though that this issue with different WISDLs was related to how SoapLab creates them, but I am not an expert in SoapLab, only a user of these services, so I really don&#x27;t know what&#x27;s going on... On the other hand, I was able to create a perl client using the first wisdl, so maybe it is a problem with Suds.&lt;/p&gt;</Body>
</answer>
</qroot>
